%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: hotptp.dvi
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Italic Times-Roman
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips hotptp -o
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2006.05.17:1607
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (hotptp.dvi)
@start
%DVIPSBitmapFont: Fa cmsy9 9 1
/Fa 1 25 df<013F16402601FFE015E04813F8487F4813FF4880D83FC06D1301273E001F
E014C048D907F8130300786D6C13070070D900FFEB0F8000F091387FE07F486EB512006F
5B03075B6F5B03005B0040ED1F8033127C9B3C>24 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmsy10 10 5
/Fb 5 95 df<007FB812F8B912FCA26C17F8CCFCAE007FB812F8B912FCA26C17F8CCFCAE
007FB812F8B912FCA26C17F836287BA841>17 D<181EA4181F84A285180785727EA2727E
727E85197E85F11F80F10FC0F107F0007FBA12FCBCFCA26C19FCCCEA07F0F10FC0F11F80
F13F00197E61614E5A4E5AA24E5A61180F96C7FCA260181EA4482C7BAA53>33
D<0060161800F0163C6C167CA200781678007C16F8A2003C16F0003E1501A26CED03E0A2
6C16C06D1407A2000716806D140FA26C6CEC1F00A26CB612FEA36C5D01F8C7127CA2017C
5CA2013C5C013E1301A2011E5C011F1303A26D6C485AA201075CECC00FA2010391C7FC6E
5AA2903801F03EA20100133CECF87CA2EC7878EC7CF8A2EC3FF0A26E5AA36E5AA36E5A6E
C8FC2E3C80B92F>56 D<007FB612F0B712F8A27EC91278B3A5003FB612F85AA27EC91278
B3A5007FB612F8B7FCA26C15F0253A7CB92E>I<14034A7E4A7EA24A7EA34A7EA2EC7CF8
A2ECF87CA2ECF03C0101133EA249487EA249486C7EA249486C7EA2EC00034980A2013E6D
7EA2496D7EA20178147801F8147CA2484880A2484880A24848EC0F80A2491407000F16C0
A248C8EA03E0A2003EED01F0A2003C1500007C16F8A248167CA248163C006016182E347C
B137>94 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmmi10 10 10
/Fc 10 112 df<133F14C0EB07F06D7E801301A26D7EA3147FA36E7EA36E7EA36E7EA36E
7EA36E7EA36E7EA26E7EA214014A7E5C4A7E91381E3F80143C14784A6C7E1301EB03E049
486C7EEB0F80EB1F00496D7E137E5B48486D7E485A485A000F6E7E485A485A48C87E12FE
167F4816800070151F293B7CB930>21 D<013FB512FE90B7FC5A5A4815FE260F801CC7FC
EA1E005A00385B5A5A481378C7FC147014F0A4495AA31303A3495AA3130FA25C131FA313
3FA291C8FC131E28257EA324>28 D<121C127FEAFF80A5EA7F00121C0909798817>58
D<EF0380EF0FC0173FEFFF80933803FE00EE0FF8EE3FE0EEFF80DB03FEC7FCED0FF8ED3F
E0EDFF80DA03FEC8FCEC0FF8EC3FE0ECFF80D903FEC9FCEB0FF8EB3FE0EBFF80D803FECA
FCEA0FF8EA3FE0EA7F8000FECBFCA2EA7F80EA3FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8
EB03FE903800FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03FE923800FF80
EE3FE0EE0FF8EE03FE933800FF80EF3FC0170FEF0380323279AD41>60
D<126012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007F
C0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE
01FF9338007F80EF1FC0A2EF7F80933801FF00EE07FCEE1FF0EE7FC04B48C7FCED07FCED
1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA
07FCEA3FF0EA7FC048CBFC12FC1270323279AD41>62 D<1760177017F01601A21603A216
07160FA24C7EA216331673166316C3A2ED0183A2ED0303150683150C160115181530A215
60A215C014011580DA03007FA202061300140E140C5C021FB5FC5CA20260C7FC5C83495A
8349C8FC1306A25BA25B13385B01F01680487E000716FFB56C013F13FF5EA2383C7DBB3E
>65 D<0103B7FC4916E018F8903B0007F80007FE4BEB00FFF03F80020FED1FC0180F4B15
E0F007F0021F1503A24B15F81801143F19FC5DA2147FA292C8FCA25C18035CA2130119F8
4A1507A2130319F04A150FA2010717E0181F4A16C0A2010FEE3F80A24AED7F00187E011F
16FE4D5A4A5D4D5A013F4B5A4D5A4A4A5A057FC7FC017F15FEEE03FC91C7EA0FF049EC7F
C0B8C8FC16FC16C03E397DB845>68 D<92391FE00380DBFFFC130002036D5A91390FE01F
8F91393F0007DF027EEB01FE02F81300495A4948147E177C4948143C495AA2011F153891
C8FCA3491530A28094C7FC80806D7E14FEECFFE06D13FE6DEBFFC06D14F06D806D80021F
7F02037FEC003F03037F1500167F163F161FA3120C160FA2001C151F94C7FCA3003C153E
A25E003E5D127E007F4A5A6D495A6DEB0FC0D8F9F0495AD8F0FE01FEC8FC39E03FFFF801
0F13E0D8C00190C9FC313D7CBA33>83 D<49B500F890387FFFF095B5FC1AE0D900030180
90380FFC004BC713E00201ED07804EC7FC6E6C140E606F5C705B606F6C485A4D5A031F91
C8FCEEE0065F6F6C5A5F03075B705A16F96FB45A94C9FC6F5AA36F7EA34B7FED037F9238
063FC0150E4B6C7E1538ED700F03E07F15C04A486C7EEC0300020613034A805C4A6D7E14
704A1300494880495A49C86C7E130E011E153F017E4B7ED803FF4B7E007F01E0011FEBFF
C0B5FC6144397EB845>88 D<EC1FC0ECFFF8903807E07E90380F801F90393F000F80017E
14C0491307484814E0485A4848EB03F0120F5B121F48481307A2127F90C7FCA2150F5A48
15E0A2151F16C0A248EC3F8016005D157E007E5C4A5A003E495A003F495A6C495A6C6C48
C7FC3807E07E3801FFF038003F8024267DA428>111 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmtt10 10 52
/Fd 52 127 df<EB01C0497EA6EB0FFC90387FFF8048B512E00007804880391FFBEFFC39
3FC3E1FE903803E07F007E80127C00FC158012F8157FA300FCEC3F00A2007E91C7FC127F
EA3FC313FBEA1FFF6C13FC6C13FF000114C06C6C7F011F13F801037F14E7ECE1FEECE07F
81001880007E1580150F12FFA312FE151F1600007E5C007F143ED83F8313FE9038C3E1FC
391FFBEFF86CB55A6C5C6C5CC691C7FCEB1FF8EB03E0A66D5A21417BB92C>36
D<EB0FC0EB3FE0497E497E80EA01F8EBF07C147E0003133E13E0A5147E147C9138FC3FF8
9039F0F87FFCEA01F1EBF3F001F7EB3FF89138E01F009038FFC03F6CEB803EA2EC007E49
137C485A486C13FC00075CEBFF01D80FDF5B381F9F81383F8F8390380FC3E0387E07E75D
38FC03F7EB01FF5D6D1410ED007C80A26CEBFF80D87E0113C0D87F03EBE0FC3A3F87F7F1
F89038FFE3FF6C01C113F06C13806C9038007FC0D801FCEB1F8026357EB32C>38
D<143814FC13011303EB07F8EB0FF0EB1FC0EB3F80EB7F0013FE485A485A5B12075B120F
5B485AA2123F90C7FCA25A127EA312FE5AAC7E127EA3127F7EA27F121FA26C7E7F12077F
12037F6C7E6C7E137FEB3F80EB1FC0EB0FF0EB07F8EB03FC130113001438164272B92C>
40 D<127012FC7E7E6C7E6C7EEA0FE06C7E6C7E6C7E6C7E137F7F1480131F14C0130FEB
07E0A214F01303A214F81301A314FC1300AC130114F8A3130314F0A2130714E0A2EB0FC0
131F1480133F14005B13FE485A485A485A485AEA3FC0485A48C7FC5A5A1270164279B92C
>I<EB0380497EA60020140800F8143E00FE14FE00FF13C1EBC7C7EBE7CF003FB512F800
0F14E0000314806C140038007FFCA248B5FC481480000F14E0003F14F839FFE7CFFEEBC7
C7EB07C100FE13C000F8143E0020140800001400A66D5A1F247AAA2C>I<EA0F80EA1FE0
EA3FF0EA7FF8A213FCA3123F121F120F120013F8A21201EA03F01207EA1FE0EA7FC0EAFF
80130012FC12700E17718A2C>44 D<007FB6FCB71280A46C150021067B9B2C>I<121FEA
3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B0B708A2C>I<1507ED0F80151FA2153F16
005D157E15FE5D14015D14035DA214075D140F5D141F5D143F92C7FC5C147E14FE5CA213
015C13035C13075C130F5C131F5CA2133F91C8FC5B137E13FE5B12015B12035B12075BA2
120F5B121F5B123F90C9FC5A127E12FE5AA25A127821417BB92C>I<EB03F8EB0FFE9038
3FFF80497F90B57E3901FE0FF03903F803F848486C7EEBE0004848137EA248487FA248C7
EA1F80A2003E140F007E15C0A3007C140700FC15E0AC6C140F007E15C0A46CEC1F80A36C
6CEB3F00A26C6C137E6D13FE00075CEBF0016C6C485A3901FE0FF06CB55A6D5B6D5BD90F
FEC7FCEB03F823357CB32C>I<1307497EA2131FA2133F137F13FF5A1207127FB5FC13DF
139FEA7C1F1200B3AE007FB512E0B612F0A36C14E01C3477B32C>I<EB0FF890387FFF80
48B512E00007804814FC391FF80FFE393FE001FF903880007F48C7EA3F80007E141F00FE
15C0150F6C15E01507A3127E123CC8FCA2150F16C0151F1680153F16005D15FE4A5A1403
4A5A4A5A4A5A4A5AECFF804948C7FC495A495A495AEB3FE0EB7F8049C8FC485A4848EB03
C04848EB07E0EA1FE0485A48B6FCB7FCA36C15C023347CB32C>I<121FEA3F80EA7FC0EA
FFE0A5EA7FC0EA3F80EA1F00C7FCAE121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F00
0B2470A32C>58 D<1507ED1F80153F15FF14034A1300EC1FFC4A5AECFFE0491380010790
C7FCEB0FFCEB3FF8EB7FE048485A4890C8FCEA0FFEEA1FF8EA7FF0EAFFC05BA27FEA7FF0
EA1FF8EA0FFEEA03FF6C13C06C6C7EEB3FF8EB0FFC6DB4FC01017F6D13E0EC3FF86E7EEC
07FF6E13801400153F151FED0700212A7BAD2C>60 D<007FB612F0B712F8A4003F15F0CA
FCA8003FB612F0B712F8A46C15F025147DA22C>I<127012FC7E6C7E13E06C7EEA1FFC6C
7E3803FF80C67FEB7FF0EB1FF8EB0FFEEB03FF6D13C06D6C7EEC3FF8EC0FFC6EB4FC0201
138080A25C02071300EC0FFCEC3FF8EC7FE049485A4990C7FCEB0FFEEB1FF8EB7FF0EBFF
C000035BD80FFEC8FC485AEA7FF0485A138048C9FC5A1270212A7BAD2C>I<EC7F809038
03FFE0010F7F013F7F497F9038FFC0FE3901FE007FD803F87F4848EB1F809038E00FCF39
0FC03FFF48484813C091B5FCEA3F01393E03F87F903907F03FE0007EEBE01F397C0FC00F
EC8007A2EAFC1F00F8EB0003A900FCEB8007D87C0F14C0A2ECC00F3A7E07E01F80003EEB
F03F903903F87F00393F01FFFED81F805B6E5A6C6C6C5A3907E00FC09039F00007C06C6C
EB0FE0D801FE131F3900FFC0FF6DB512C06D1480010FEBFE00010313F89038007FC02333
7CB22C>64 D<14FE497EA4497FA214EFA2130781A214C7A2010F7FA314C390381F83F0A5
90383F01F8A490387E00FCA549137E90B512FEA34880A29038F8003FA34848EB1F80A400
0715C049130FD87FFEEBFFFC6D5AB514FE6C15FC497E27347EB32C>I<007FB512C0B612
F88115FF6C15802603F00013C0153FED0FE0ED07F0A2150316F81501A6150316F01507A2
ED0FE0ED3FC015FF90B61280160015FC5D15C001F0C8FCB0387FFF80B57EA36C5B25337E
B22C>80 D<90381FF80790B5EA0F804814CF000714FF5A381FF01F383FC003497E48C7FC
007E147F00FE143F5A151FA46CEC0F00007E91C7FC127F7FEA3FE0EA1FFCEBFFC06C13FC
0003EBFFC06C14F06C6C7F01077F9038007FFEEC07FF02001380153FED1FC0A2ED0FE0A2
0078140712FCA56CEC0FC0A26CEC1F806D133F01E0EB7F009038FE01FF90B55A5D00F914
F0D8F83F13C0D8700790C7FC23357CB32C>83 D<007FB612FCB712FEA43AFC007E007EA7
0078153CC71400B3AF90383FFFFCA2497F6D5BA227337EB22C>I<3B7FFF803FFFC0B56C
4813E0A36C496C13C03B03F00001F800B3AF6D130300015DA26D130700005D6D130F017F
495A6D6C485AECE0FF6DB5C7FC6D5B010313F86D5B9038003F802B3480B22C>I<D87FFC
EB7FFC486CEBFFFEA36C48EB7FFCD80FC0EB07E06D130F000715C0A36D131F00031580A3
6D133F00011500A36D5B0000147EA4017E5BA46D485AA490381F83F0A4010F5B14C7A301
075BA214EFA201035BA214FFA26D90C7FCA46D5A27347EB22C>I<3A3FFF03FFE0484913
F0148714076C6D13E03A01F800FE007F0000495A13FE017E5BEB7F03013F5B1487011F5B
14CF010F5B14FF6D5BA26D90C7FCA26D5AA26D5AA2497EA2497EA2497F81EB0FCF81EB1F
C7EC87F0EB3F83EC03F8EB7F01017E7FEBFE00497F0001147E49137F000380491480151F
D87FFEEBFFFC6D5AB514FE6C15FC497E27337EB22C>88 D<D87FFCEB7FFC486CEBFFFEA3
6C48EB7FFCD807F0EB0FC0151F000315806D133F12016DEB7F0012006D137E017E13FE01
7F5BEB3F01EC81F8131FEC83F0EB0FC314C7903807E7E0A201035B14EF6DB45AA292C7FC
7F5C147EB0903807FFE0497FA36D5B27337EB22C>I<130EEB3F80EBFFE0000313F8000F
13FE487FD87FF113C0D8FFE013E0EB803F38FE000F007CEB07C00030EB01801B0C78B22C
>94 D<3801FFF0000713FE001F6D7E15E048809038C01FF81407EC01FC381F80000006C7
7EC8127EA3ECFFFE131F90B5FC1203120F48EB807E383FF800EA7FC090C7FC12FE5AA47E
007F14FEEB8003383FE01F6CB612FC6C15FE6C14BF0001EBFE1F3A003FF007FC27247CA3
2C>97 D<EA7FF0487EA3127F1201AAEC1FE0ECFFF801FB13FE90B6FC16809138F07FC091
38801FE091380007F049EB03F85BED01FC491300A216FE167EA816FE6D14FCA2ED01F86D
13036DEB07F0150F9138801FE09138E07FC091B51280160001FB5B01F813F83900F03FC0
27337FB22C>I<903803FFE0011F13F8017F13FE48B5FC48804848C6FCEA0FF0485A4913
7E4848131890C9FC5A127EA25AA8127EA2127F6C140F6DEB1F806C7E6D133F6C6CEB7F00
3907FE03FF6CB55A6C5C6C6C5B011F13E0010390C7FC21247AA32C>I<EC0FFE4A7EA380
EC003FAAEB07F8EB3FFE90B512BF4814FF5A3807FC0F380FF00348487E497E48487F90C7
FC007E80A212FE5AA87E007E5CA2007F5C6C7E5C6C6C5A380FF0073807FC1F6CB612FC6C
ECBFFE6C143FEB3FFC90390FF01FFC27337DB22C>I<EB03FE90381FFFC0017F13F048B5
7E48803907FE03FE390FF800FFD81FE0EB3F805B4848EB1FC090C7120F5A007E15E01507
5AB7FCA416C000FCC9FC7E127EA2127F6CEC03C06DEB07E06C7ED80FF0130F6C6CEB3FC0
01FF13FF000190B512806C1500013F13FC010F13F00101138023247CA32C>I<EC0FF8EC
3FFE91B5FC4914805B903807FC7F14F090390FE03F0014C092C7FCA6007FB512FEB7FCA3
6C5C26000FC0C7FCB3A8003FB512F04880A36C5C21337DB22C>I<ED03F8903907F80FFC
90391FFE3FFE017FB6FC48B7FC48ECFE7F9038FC0FF82607F003133E3A0FE001FC1CD9C0
001300001F8049137EA66D13FE000F5CEBE0016C6C485A3903FC0FF048B5FC5D481480D9
9FFEC7FCEB87F80180C8FCA37F6C7E90B512F06C14FE48ECFF804815E04815F03A3FC000
1FF848C7EA03FC007E1400007C157C00FC157E48153EA46C157E007E15FCD87F801303D8
3FE0EB0FF8D81FFCEB7FF06CB612E0000315806C1500D8003F13F8010713C028387EA42C
>I<EA7FF0487EA3127F1201AAEC1FE0EC7FFC9038F9FFFE01FB7F90B6FC9138F03F80EC
C01F02807FEC000F5B5BA25BB3267FFFE0B5FCB500F11480A36C01E0140029337FB22C>
I<1307EB1FC0A2497EA36D5AA20107C7FC90C8FCA7387FFFC080B5FC7EA2EA0007B3A800
7FB512FCB612FEA36C14FC1F3479B32C>I<387FFFE0B57EA37EEA0003B3B3A5007FB612
80B712C0A36C158022337BB22C>108 D<3A7F83F007E09039CFFC1FF83AFFDFFE3FFCD8
7FFF13FF91B57E3A07FE1FFC3E01FCEBF83F496C487E01F013E001E013C0A301C01380B3
3B7FFC3FF87FF0027F13FFD8FFFE6D13F8D87FFC4913F0023F137F2D2481A32C>I<397F
F01FE039FFF87FFC9038F9FFFE01FB7F6CB6FC00019038F03F80ECC01F02807FEC000F5B
5BA25BB3267FFFE0B5FCB500F11480A36C01E0140029247FA32C>I<EB07FCEB1FFF017F
13C048B512F048803907FC07FC390FF001FE48486C7E0180133F003F158090C7121F007E
EC0FC0A348EC07E0A76C140F007E15C0A2007F141F6C15806D133F6C6CEB7F006D5B6C6C
485A3907FC07FC6CB55A6C5C6C6C13C0011F90C7FCEB07FC23247CA32C>I<397FF01FE0
39FFF8FFF801FB13FE90B6FC6C158000019038F07FC09138801FE091380007F049EB03F8
5BED01FC491300A216FE167EA816FE6D14FCA2ED01F86D13036DEB07F0150F9138801FE0
9138E07FC091B51280160001FB5B01F813F8EC3FC091C8FCAD387FFFE0B57EA36C5B2736
7FA32C>I<D87FFEEB3FC0B53801FFF0020713F8021F13FC6C5B39003F7FE1ECFF019138
FC00F84A13704A13005CA25C5CA391C8FCAF007FB512E0B67EA36C5C26247EA32C>114
D<90387FF8700003B512F8120F5A5A387FC00F387E00034813015AA36CEB00F0007F1400
13F0383FFFC06C13FE6CEBFF80000314E0C66C13F8010113FCEB0007EC00FE0078147F00
FC143F151F7EA26C143F6D133E6D13FE9038F007FC90B5FC15F815E000F8148039701FFC
0020247AA32C>I<131E133FA9007FB6FCB71280A36C1500D8003FC8FCB1ED03C0ED07E0
A5EC800F011FEB1FC0ECE07F6DB51280160001035B6D13F89038003FE0232E7EAD2C>I<
3A7FF003FF80486C487FA3007F7F0001EB000FB3A3151FA2153F6D137F3900FE03FF90B7
FC6D15807F6D13CF902603FE07130029247FA32C>I<3A7FFF01FFFCB514FE148314016C
15FC3A03E0000F80A26D131F00011500A26D5B0000143EA26D137E017C137CA2017E13FC
013E5BA2EB3F01011F5BA21483010F5BA214C701075BA214EF01035BA214FF6D90C7FCA2
6D5A147C27247EA32C>I<D87FFFEB7FFF6EB5FCB515806C16004A7ED807C0EB01F0A66C
6C495AA3143E147FA2D801F0495AECFF87A214F7A201F113C700005D9038F9E3CFA201FB
13EFA3D97BC190C7FC017F13FFA21480A2013F5B90381F007C29247FA32C>I<3A3FFF03
FFF048018713F8A36C010313F03A00FC007E005D90387E01F8013F5BEB1F83EC87E09038
0FCFC0903807EF80EB03FF6D90C7FC5C6D5A147C14FE130180903803EF80903807CFC0EB
0FC7EC83E090381F01F0013F7FEB7E00017C137C49137E0001803A7FFF01FFFC1483B514
FE6C15FC140127247EA32C>I<3A7FFF01FFFCB5008113FE148314816C010113FC3A03E0
000F806C7E151F6D140012005D6D133E137C017E137E013E137CA2013F13FC6D5BA2EB0F
815DA2EB07C1ECC3E0A2EB03E3ECE7C0130114F75DEB00FFA292C7FC80A2143EA2147E14
7CA214FC5CA2EA0C01003F5BEA7F83EB87E0EA7E0F495A387FFF806C90C8FC6C5A6C5AEA
07E027367EA32C>I<15FF02071380141F147F91B512004913C04AC7FCEB03F85CB31307
EB1FE013FF007F5BB55A49C8FC6D7E6C7FC67F131FEB07F01303B380EB01FEECFFC06D13
FF6E1380141F14070200130021417BB92C>123 D<127812FCB3B3B3A9127806416DB92C>
I<EA7FC0EAFFF813FE6D7E6C7FC67F131FEB07F01303B380EB01FEECFFC06D13FF6E1380
141F147F91B512004913C04AC7FCEB03F85CB31307EB1FE013FF007F5BB55A49C8FC13F8
EA7FC021417BB92C>I<01F81370D803FE13F8380FFF0148138748EBCFF0397F9FFFE0D8
FF0F13C0D8FC07138039F803FE00387000F81D0A79B22C>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmti10 10 29
/Fe 29 122 df<EE7FE0923903FFFC7E92380FC03E92381F000F033EEB3FFE4B137F03FC
14FC5D1401173D4A48EB01F8A21703A24A4814F0A21707A2020F15E05D170FA218C0010F
B7FCA3903B001F80001F80A2173F143F92C71300A25FA24A147E147E17FEA25F14FE4A13
01A25FA2010114035CEFF070A21607010316F04AECE0E0A3EFE1C013074A14C3933803E3
80EE01E7933800FF004948143C94C7FCA3495AA3001C90CAFC127E133E12FE133C137CEA
F878EA78F0EA3FE0EA0F80374C82BA31>13 D<387FFFF8A2B5FCA214F0150579941E>45
D<DB03FE130E92393FFF801E92B5EAE03C913903FE01F0913A0FF000787CDA3FC0EB3CFC
4AC7EA1FF802FE140FEB03FC49481407494815F049481403495A5C49C813E05B485A5B00
0317C0485AA2485A1880485A94C7FCA2485AA3127F5BA312FF90CBFCA41738A217784816
707E17F06C5E16015F16036C6C4A5A94C7FC001F150E6D141E000F5D6D5C6C6C495A6C6C
EB03C0D801FEEB0F8027007F807EC8FC6DB45A010F13E0010090C9FC373D74BA3B>67
D<0107B8FCA3903A000FF000034BEB007F183E141F181E5DA2143FA25D181C147FA29238
000380A24A130718004A91C7FC5E13015E4A133E167E49B512FEA25EECF8000107147C16
3C4A1338A2010F147818E04A13701701011F16C016004A14031880013F150718004A5CA2
017F151E173E91C8123C177C4915FC4C5A4914070001ED7FF0B8FCA25F38397BB838>69
D<0107B712FEA3903A000FF000074B1300187C021F153CA25DA2143FA25D1838147FA292
C8FCEE03804A130718004A91C7FCA201015CA24A131E163E010314FE91B5FC5EA2903807
F800167C4A1378A2130FA24A1370A2011F14F0A24A90C8FCA2133FA25CA2137FA291CAFC
A25BA25B487EB6FCA337397BB836>I<0107B512FCA25E9026000FF8C7FC5D5D141FA25D
A2143FA25DA2147FA292C8FCA25CA25CA21301A25CA21303A25CA21307A25CA2130F170C
4A141CA2011F153C17384A1478A2013F157017F04A14E01601017F140317C091C7120716
0F49EC1F80163F4914FF000102071300B8FCA25E2E397BB834>76
D<92383FC00E913901FFF01C020713FC91391FC07E3C91393F001F7C027CEB0FF84A1307
49481303495A4948EB01F0A2495AA2011F15E091C7FCA34915C0A36E90C7FCA2806D7E14
FCECFF806D13F015FE6D6D7E6D14E0010080023F7F14079138007FFC150F15031501A215
00A2167C120EA3001E15FC5EA3003E4A5AA24B5AA2007F4A5A4B5A6D49C7FC6D133ED8F9
F013FC39F8FC03F839F07FFFE0D8E01F138026C003FCC8FC2F3D7ABA2F>83
D<14F8EB07FE90381F871C90383E03FE137CEBF801120148486C5A485A120FEBC001001F
5CA2EA3F801403007F5C1300A21407485C5AA2140F5D48ECC1C0A2141F15831680143F15
87007C017F1300ECFF076C485B9038038F8E391F0F079E3907FE03FC3901F000F0222677
A42A>97 D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EBE0F8EBE7FE
9038EF0F80390FFC07C013F89038F003E013E0D81FC013F0A21380A2123F1300A214075A
127EA2140F12FE4814E0A2141F15C05AEC3F80A215005C147E5C387801F8007C5B383C03
E0383E07C0381E1F80D80FFEC7FCEA01F01C3B77B926>I<147F903803FFC090380FC1E0
90381F0070017E13784913383901F801F83803F003120713E0120FD81FC013F091C7FC48
5AA2127F90C8FCA35A5AA45AA3153015381578007C14F0007EEB01E0003EEB03C0EC0F80
6CEB3E00380F81F83803FFE0C690C7FC1D2677A426>I<ED01F815FFA3150316F0A21507
A216E0A2150FA216C0A2151FA21680A2153FA202F81300EB07FE90381F877F90383E03FF
017C5BEBF80112013803F00048485B120FEBC001121F5DEA3F801403127F01005BA21407
5A485CA2140FA248ECC1C0A2141F15C3ED8380143F1587007C017F1300ECFF076C485B90
38038F8E391F0F079E3907FE03FC3901F000F0253B77B92A>I<147F903803FFC090380F
C1E090383F00F0017E13785B485A485A485A120F4913F8001F14F0383F8001EC07E0EC1F
80397F81FF00EBFFF891C7FC90C8FC5A5AA55AA21530007C14381578007E14F0003EEB01
E0EC03C06CEB0F806CEB3E00380781F83803FFE0C690C7FC1D2677A426>I<ED07C0ED1F
F0ED3E38ED7C3CEDF8FC15F9140115F1020313F8EDF0F0160014075DA4140F5DA4141F5D
010FB512C05B16809039003F800092C7FCA45C147EA414FE5CA413015CA413035CA41307
5CA4130F5CA3131F5CA391C8FC5B121CEA7E3EA2EAFE3C137C1378EAF8F01278EA3FC0EA
0F80264C82BA19>I<EC07C0EC3FF09138FC38E0903901F01FF0EB03E0903807C00FEB0F
80011F1307D93F0013E05B017E130F13FE4914C01201151F1203491480A2153F12074914
00A25DA249137EA215FEA25D00031301140314076C6C485A0000131FEB787BEB3FF39038
0FC3F0EB00031407A25DA2140F5D121C007E131F5D00FE49C7FC147E5C387801F8387C07
E0381FFF80D803FEC8FC24367CA426>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5C
A3133F91C8FCA35B90387E07F0EC1FFCEC783E9038FFE01F02C01380EC800F1400485A16
C05B49EB1F8012035BA2153F000715005BA25D000F147E5B15FE5D121FD98001131C15F8
163C003F01031338010013F0A216704814E0007E15F016E0EDE1C000FE903801E3804890
3800FF000038143C263B7BB92A>I<EB01C0EB07E014F0130F14E01307EB038090C7FCAB
13F0EA03FCEA071EEA0E1F121CA212385B1270A25BEAF07E12E013FEC65AA212015B1203
A25B12075BA2000F13E013C013C1001F13C01381A2EB83801303EB0700A2130E6C5AEA07
F8EA01E0143879B619>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FC
A35B017EEB0F80ED3FE015F09039FE01C1F09038FC0387EC0707140E0001011C13E0EBF8
3891383003800270C7FC00035BEBF1C0EBF38001FFC8FCEA07FC7FEBFFC0EBE7F8380FE1
FCEBC07E147F80001F809039801F81C0A21583003F013F138001001303A2150748150000
7E133EEC1E0E151E00FE6D5A48EB07F80038EB01E0243B7BB926>107
D<EB0FC0EA07FFA3EA001F1480A2133FA21400A25BA2137EA213FEA25BA21201A25BA212
03A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25AA2EA7E0EA212FE131E
EAFC1CA2133C133812F81378EA7870EA7CE0121FEA0F80123B79B915>I<D801E001FEEB
07F03C07F803FF801FFC3C0E3C0F07C0783E3C1E3E3C03E1E01F261C1F78D9F3C013803C
383FF001F7800F02E01400007801C013FE007018C002805B4A4848EB1F80EAF07FD8E07E
5CA200000207143F01FE1700495CA2030F5C0001177E495C18FE031F5C120349DA800113
1C18F8033F153C00070403133849020013F0A24B1570000F17E049017E15F019E003FEEC
E1C0001FEE01E34949903800FF000007C70038143C3E2679A444>I<D801E013FE3A07F8
03FF803A0E3C0F07C03A1E3E3C03E0261C1F787F39383FF00114E0007813C00070811480
4A485AEAF07FEAE07EA20000140701FE5C5BA2150F00015D5B151F5E12034990383F8380
160316070007027F130049137EA2160E000F147C49141E161C5E001FEC3C7849EB1FE000
07C7EA0780292679A42F>I<147F903803FFC090380FC1F090381F00F8017E137C5B4848
137E4848133E0007143F5B120F485AA2485A157F127F90C7FCA215FF5A4814FEA2140115
FC5AEC03F8A2EC07F015E0140F007C14C0007EEB1F80003EEB3F00147E6C13F8380F83F0
3803FFC0C648C7FC202677A42A>I<9039078007C090391FE03FF090393CF0787C903938
F8E03E9038787FC00170497EECFF00D9F0FE148013E05CEA01E113C15CA2D80003143FA2
5CA20107147FA24A1400A2010F5C5E5C4B5A131F5EEC80035E013F495A6E485A5E6E48C7
FC017F133EEC70FC90387E3FF0EC0F8001FEC9FCA25BA21201A25BA21203A25B1207B512
C0A3293580A42A>I<ECF803903807FE0790381F871F90383E03BF017C13FEEBF8011201
3803F000484813FC120F5B001F130115F8EA3F80A2007F1303010013F0A34813074814E0
A3140F4814C0A3141F1580143FA2007C137FECFF006C5AEB03BF381F0F7F3807FE7EEA01
F0C7FC14FE5CA313015CA313035C130748B512C0A3203577A426>I<3903C003F0390FF0
1FFC391E783C0F381C7C703A3C3EE03F8038383FC0EB7F800078150000701300151CD8F0
7E90C7FCEAE0FE5BA2120012015BA312035BA312075BA3120F5BA3121F5BA3123F90C9FC
120E212679A423>I<14FE903807FF8090380F83C090383E00E04913F00178137001F813
F00001130313F0A215E00003EB01C06DC7FC7FEBFFC06C13F814FE6C7F6D13807F010F13
C01300143F141F140F123E127E00FE1480A348EB1F0012E06C133E00705B6C5B381E03E0
6CB45AD801FEC7FC1C267AA422>I<EB0380EB07C0130FA4131F1480A3133F1400A35B13
7E007FB5FCA2B6FC3800FC00A312015BA312035BA312075BA3120F5BA3121FEB801CA214
3C003F1338EB0078147014F014E0EB01C0EA3E03381F0780380F0F00EA07FCEA01F01835
79B31C>I<01F01507D803FC903903801F80D8071E903907C03FC0D80E1F130F121C123C
0038021F131F49EC800F00701607A249133FD8F07E168000E0ED000313FEC64849130718
000001147E5B03FE5B0003160E495BA2171E00070101141C01E05B173C1738A217781770
020314F05F0003010713016D486C485A000190391E7C07802800FC3C3E0FC7FC90393FF8
1FFE90390FE003F0322679A437>119 D<903907E007C090391FF81FF89039787C383C90
38F03E703A01E01EE0FE3803C01F018013C0D8070014FC481480000E1570023F1300001E
91C7FC121CA2C75AA2147EA214FEA25CA21301A24A1370A2010314F016E0001C5B007E14
01010714C000FEEC0380010F1307010EEB0F0039781CF81E9038387C3C393FF03FF03907
C00FC027267CA427>I<13F0D803FCEB01C0D8071EEB03E0D80E1F1307121C123C003814
0F4914C01270A249131FD8F07E148012E013FEC648133F160012015B5D0003147E5BA215
FE00075C5BA214015DA314035D14070003130FEBF01F3901F87FE038007FF7EB1FC7EB00
0F5DA2141F003F5C48133F92C7FC147E147C007E13FC387001F8EB03E06C485A383C1F80
D80FFEC8FCEA03F0233679A428>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmbx12 12 40
/Ff 40 122 df<ED0FFF4AB512C0020F14F0027F80903A01FFF803FC499038C000FE010F
EB00034948497E49485B5C495A4C138001FF6E13005CA3705AEE01F893C8FCA74BB51280
B9FCA5C69038E00003B3B0007FD9FFC1B6FCA538467EC53E>12 D<EC03C01407141F147F
EB03FF133FB6FCA413C3EA0003B3B3ADB712FCA5264177C038>49
D<ECFFE0010F13FE013F6D7E90B612E0000315F82607FC0313FE3A0FE0007FFFD81F806D
138048C7000F13C0488001C015E001F07F00FF6E13F07F17F881A46C5A6C5A6C5AC9FC17
F05DA217E05D17C04B13804B1300A2ED1FFC4B5A5E4B5A4B5A4A90C7FC4A5A4A5AEC0FF0
4A5AEC3F804AC7127814FE495A494814F8D907E014F0495A495A49C8FC017C1401491403
48B7FC4816E05A5A5A5A5AB8FC17C0A42D417BC038>I<ECFFF0010713FF011F14C0017F
14F049C66C7ED803F8EB3FFED807E06D7E81D80FF86D138013FE001F16C07FA66C5A6C48
15806C485BC814005D5E4B5A4B5A4B5A4A5B020F1380902607FFFEC7FC15F815FF16C090
C713F0ED3FFCED0FFEEEFF80816F13C017E0A26F13F0A217F8A3EA0FC0EA3FF0487EA248
7EA217F0A25D17E06C5A494913C05BD83F80491380D81FF0491300D80FFEEBFFFE6CB612
F800015D6C6C14C0011F49C7FC010113E02D427BC038>I<163FA25E5E5D5DA25D5D5D5D
A25D92B5FCEC01F7EC03E7140715C7EC0F87EC1F07143E147E147C14F8EB01F0EB03E013
0714C0EB0F80EB1F00133E5BA25B485A485A485A120F5B48C7FC123E5A12FCB91280A5C8
000F90C7FCAC027FB61280A531417DC038>I<0007150301E0143F01FFEB07FF91B6FC5E
5E5E5E5E16804BC7FC5D15E092C8FC01C0C9FCAAEC3FF001C1B5FC01C714C001DF14F090
39FFE03FFC9138000FFE01FC6D7E01F06D13804915C0497F6C4815E0C8FC6F13F0A317F8
A4EA0F80EA3FE0487E12FF7FA317F05B5D6C4815E05B007EC74813C0123E003F4A1380D8
1FC0491300D80FF0495AD807FEEBFFFC6CB612F0C65D013F1480010F01FCC7FC010113C0
2D427BC038>I<EE1F80A24C7EA24C7EA34C7EA24B7FA34B7FA24B7FA34B7F169F031F80
161F82033F80ED3E07037E80157C8203FC804B7E02018115F0820203814B137F0207815D
173F020F814B7F021F8292C77EA24A82023E80027E82027FB7FCA291B87EA2498302F0C8
FCA20103834A157F0107834A153FA249488284011F8491C97E4984133E017E82B6020FB6
12F0A54C457CC455>65 D<B9FC18F018FE727E19E026003FFCC700077F05017F716C7E72
7E727EA2721380A37213C0A74E1380A24E1300A24E5A4E5A4E5A4D5B05075B94B5128091
B700FCC7FC18F018FF19E002FCC7000113F8716C7EF01FFE727E7213801AC07213E0A272
13F0A31AF8A71AF0A2601AE0604E13C0604E138095B5120005075BBA12F86119C04EC7FC
18E045447CC350>I<B9FC18F018FE727E19E026003FFEC7001F13F805017F9438003FFF
060F7F727F727F727F84737E737EA2737EA2737EA21B80A2851BC0A51BE0AD1BC0A51B80
61A21B006162193F624F5A19FF624E5B06075B4E5B063F90C7FC4DB45A050F13F8BA5A19
C04EC8FC18F095C9FC4B447CC356>68 D<BA1280A419C026003FFEC7121F1701EF007F18
3F181F180F180719E01803A31801A3EE01E0F000F0A419001603A31607160F167F91B6FC
A59138FE007F160F16071603A31601A693C9FCAFB712F0A53C447CC346>70
D<B7D88003B612FEA526003FFEC9EBF800B3A791B9FCA54AC9FCB3AAB7D88003B612FEA5
4F447CC358>72 D<B712E0A5D8001F90C7FCB3B3B3A4B712E0A523447DC32A>I<B64BB5
12FE8181A281D8003F6D91C7EA780081013D7F81133C6E7E6E7F6E7F6E7F6E7F82806E7F
6E7F6F7E6F7F83816F7F6F7F6F7F6F7F6F7F8382707F707F707F707F8482707F707F717E
7113807113C019E0837113F07113F87113FC7113FE19FF847213F884848484A28484197F
193F191FA2190F1907B61603190119001A78A24F447CC358>78 D<923807FFC092B512FE
0207ECFFC0021F15F091267FFE0013FC902601FFF0EB1FFF01070180010313C04990C76C
7FD91FFC6E6C7E49486F7E49486F7E01FF8348496F7E48496F1380A248496F13C0A24890
C96C13E0A24819F04982003F19F8A3007F19FC49177FA400FF19FEAD007F19FC6D17FFA3
003F19F8A26D5E6C19F0A26E5D6C19E0A26C6D4B13C06C19806E5D6C6D4B13006C6D4B5A
6D6C4B5A6D6C4B5A6D6C4A5B6D01C001075B6D01F0011F5B010101FE90B5C7FC6D90B65A
023F15F8020715C002004AC8FC030713C047467AC454>I<B9FC18F018FE727E19E0D800
1F90C7000F7F05017F716C7E727E727E721380A21AC084A21AE0A91AC0A24E1380A21A00
604E5A4E5A4D485A050F5B92B712C096C7FC18FC18C092CBFCB3A7B712E0A543447DC34D
>I<B812F8EFFFC018F818FE727ED8001F90C7003F13E005037F05007F727E727E727EA2
8684A286A762A24E90C7FCA24E5A61187F943801FFF005075B053F138092B7C8FC18F818
E018F892C77FEF3FFF050F7F717F717FA2717FA2717FA785A61B0F85A2187F73131F7214
1EB700E06DEB803E72EBE0FC72EBFFF8060114F0726C13E0CC0007138050457DC354>82
D<DAFFE0131C010701FE133C013F9038FF807C90B6EAE0FC4815F9489038801FFF3907FC
00014848EB007F4848143F4848140F491407007F15035B1601160012FF177CA27FA26D15
3C7F7F6D92C7FC6C7EEBFFE014FE6CEBFFF015FF6C15E016FC6C816C6F7E6C826C826C6C
81011F810107811300020F80140003077FED007F82040F1380828212F082A282A27EA218
007EA26C5D6C5E6D14036D5D6D140701F84A5A01FFEC3FF002F8EBFFE0486CB65AD8FC1F
92C7FCD8F80714FC48C614F0480107138031467AC43E>I<003FBA12E0A59026FE000FEB
8003D87FE09338003FF049171F90C71607A2007E1803007C1801A300781800A400F819F8
481978A5C81700B3B3A20107B8FCA545437CC24E>I<B600FE017FB691B512FEA526007F
FCC8D83FFEC9EA7C006E82013F701778807415F86D705F6F7014016D705FA26F7014036D
64814E6D14076D646F70140F6D041E94C7FCA26F023E6D5C6DDC3C7F151E81027F037C6D
5CF0783F6F70147C023F4B6C1578A26F01016F13F86E4B6C5D16806E02036F485A4E7E04
C0EEE0036E4A486C5DA2DCE00FEDF0076E4B6C5D16F06E4A6F48C8FC051E7F04F8705A6E
4A027F131EA2DCFC7CEDFE3E037F0178023F133C04FE16FF033F01F85E4D8004FF17F86F
496E5BA36F496E5BA26F604D80A26F90C86C5BA36F486F90C9FCA26F48167EA30478163C
6F457EC374>87 D<903801FFE0011F13FE017F6D7E48B612E03A03FE007FF84848EB1FFC
6D6D7E486C6D7EA26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91B6FC1307013F13
F19038FFFC01000313E0000F1380381FFE00485A5B127F5B12FF5BA35DA26D5B6C6C5B4B
13F0D83FFE013EEBFFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB8007D90FFCC9FC32
2F7DAD36>97 D<EC3FFC49B512C0010F14F0013F14FC90397FF003FE9039FFC001FF0003
495A48494813805B120F485AA2485A6F1300007F6E5AED00784991C7FCA212FFAC6C7EA3
123F6DEC03C0A26C6C1407000F16806D140F6C6DEB1F006C6D133E6C01F05B3A007FFC03
F86DB55A010F14C0010391C7FC9038003FF82A2F7CAD32>99 D<EE03FEED07FFA5ED001F
160FB1EC3FE0903803FFFC010FEBFF8F013F14CF9039FFF807FF48EBC00148903880007F
4890C7123F4848141F49140F121F485AA3127F5BA212FFAC127FA37F123FA26C6C141FA2
6C6C143F0007157F6C6C91B5FC6CD9C00314FC6C9038F01FEF6DB5128F011FEBFE0F0107
13F89026007FC0EBF80036467CC43E>I<EC3FF80103B57E010F14E0013F8090397FF83F
F89039FFC007FC48496C7E48496C7E48486D1380485A001FED7FC05B003FED3FE0A2127F
5B17F0161F12FFA290B7FCA401F0C9FCA5127FA27FA2123F17F06C7E16016C6C15E06C6C
14036C6DEB07C06C6DEB0F806C01F0EB3F0090397FFE01FE011FB55A010714F0010114C0
9026001FFEC7FC2C2F7DAD33>I<EDFF80020F13E0027F13F049B512F849EB8FFC90390F
FE0FFE90381FFC1F14F8133FEB7FF0A2ED0FFCEBFFE0ED03F0ED00C01600ABB612F8A5C6
01E0C7FCB3B0007FEBFFE0A527467DC522>I<DAFFE0137E010F9039FE03FF80013FEBFF
8F90B812C048D9C07F133F489038001FF84848EB0FFC4848903907FE1F80001F9238FF0F
00496D90C7FCA2003F82A8001F93C7FCA26D5B000F5D6C6C495A6C6C495A6C9038C07FF0
4890B55A1680D8078F49C8FC018013E0000F90CAFCA47F7F7F90B612C016FC6CEDFF8017
E06C826C16FC7E000382000F82D81FF0C77ED83FC014074848020113808248C9FC177FA4
6D15FF007F17006D5C6C6C4A5A6C6C4A5AD80FFEEC3FF83B07FFC001FFF0000190B612C0
6C6C92C7FC010F14F8D9007F90C8FC32427DAC38>I<EB7FC0B5FCA512037EB1ED07FE92
383FFF8092B512E002C114F89139C7F03FFC9138CF801F9139DF000FFE14DE14FC4A6D7E
5CA25CA35CB3A7B60083B512FEA537457CC43E>I<137C48B4FC4813804813C0A24813E0
A56C13C0A26C13806C1300EA007C90C7FCAAEB7FC0EA7FFFA512037EB3AFB6FCA518467C
C520>I<EB7FC0B5FCA512037EB293387FFFE0A593380FE0004C5A4CC7FC167E5EED03F8
ED07E04B5A4B5A037FC8FC15FEECC1FCECC3FE14C7ECDFFF91B57E82A202F97F02E17F02
C07FEC807F6F7E826F7E816F7F836F7F816F7F83707E163FB60003B512F8A535457DC43B
>107 D<EB7FC0B5FCA512037EB3B3B3A3B61280A519457CC420>I<90277F8007FEEC0FFC
B590263FFFC090387FFF8092B5D8F001B512E002816E4880913D87F01FFC0FE03FF8913D
8FC00FFE1F801FFC0003D99F009026FF3E007F6C019E6D013C130F02BC5D02F86D496D7E
A24A5D4A5DA34A5DB3A7B60081B60003B512FEA5572D7CAC5E>I<90397F8007FEB59038
3FFF8092B512E0028114F8913987F03FFC91388F801F000390399F000FFE6C139E14BC02
F86D7E5CA25CA35CB3A7B60083B512FEA5372D7CAC3E>I<EC1FFC49B512C0010714F001
1F14FC90397FF80FFF9026FFC0017F48496C7F4848C7EA3FE000078248486E7E49140F00
1F82A2003F82491407007F82A400FF1780AA007F1700A46C6C4A5AA2001F5E6D141F000F
5E6C6C4A5AA26C6C6CEBFFE06C6D485B27007FF80F90C7FC6DB55A010F14F8010114C090
26001FFCC8FC312F7DAD38>I<90397FC00FF8B590B57E02C314E002CF14F89139DFC03F
FC9139FF001FFE000301FCEB07FF6C496D13804A15C04A6D13E05C7013F0A2EF7FF8A4EF
3FFCACEF7FF8A318F017FFA24C13E06E15C06E5B6E4913806E4913006E495A9139DFC07F
FC02CFB512F002C314C002C091C7FCED1FF092C9FCADB67EA536407DAC3E>I<90387F80
7FB53881FFE0028313F0028F13F8ED8FFC91389F1FFE000313BE6C13BC14F8A214F0ED0F
FC9138E007F8ED01E092C7FCA35CB3A5B612E0A5272D7DAC2E>114
D<90391FFC038090B51287000314FF120F381FF003383FC00049133F48C7121F127E00FE
140FA215077EA27F01E090C7FC13FE387FFFF014FF6C14C015F06C14FC6C800003806C15
806C7E010F14C0EB003F020313E0140000F0143FA26C141F150FA27EA26C15C06C141FA2
6DEB3F8001E0EB7F009038F803FE90B55A00FC5CD8F03F13E026E007FEC7FC232F7CAD2C
>I<EB01E0A51303A41307A2130FA2131FA2133F137F13FF1203000F90B51280B7FCA4C6
01E0C7FCB3A3ED01E0A9150302F013C0137F150790393FF80F8090391FFC1F006DB5FC6D
13FC01015B9038003FE023407EBE2C>I<D97FC049B4FCB50103B5FCA50003EC000F6C81
B3A85EA25EA25E7E6E491380017FD901F713FE9138F807E76DB512C7010F1407010313FE
9026007FF0EBFC00372E7CAC3E>I<B5D8FE1FB539801FFFF0A500019027C0003FE0C7EA
7C007114786E17F86C6F6C5C6E1601017F6E6C5CA26E011F1403013F6F5C6E013F140701
1F6F5CA26E0179140F010F048090C7FC6E01F95C6D02F0EBC01E15806D902681E07F5B18
E003C3157C6D9139C03FF07815E76DDA801F5B18F803FF14F96E9039000FFDE018FF6E48
6D5BA36E486D5BA26E486D90C8FCA24B7F02075DA26E48147C4B143C4C2C7EAB51>119
D<B500FE90383FFFF0A5C601F0903803E0006D6C495A013F4A5A6D6C49C7FC6E5B6D6C13
7E6DEB807C6D6D5A6DEBC1F0EDE3E06DEBF7C06EB45A806E90C8FC5D6E7E6E7F6E7FA24A
7F4A7F8291381F3FFCEC3E1F027C7F4A6C7E49486C7F01036D7F49487E02C08049486C7F
49C76C7E013E6E7E017E141FB500E090B512FCA5362C7EAB3B>I<B6903803FFFCA50001
01E09038003E006C163C80017F5D8017F8013F5D6E1301011F5D6E1303010F5D6E13076D
5DED800F6D92C7FC15C05E6DEBE01E163E6D143CEDF07C027F1378EDF8F8023F5B15FD02
1F5B15FF6E5BA36E5BA26E90C8FCA26E5AA26E5AA21578A215F85D14015D001F1303D83F
805B387FC007D8FFE05B140F92C9FC5C143E495A387FC1F8EB07F06CB45A6C5B000790CA
FCEA01FC36407EAB3B>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmti9 9 38
/Fg 38 122 df<B51280A46C1300110579911B>45 D<121C127F12FFA412FE1238080877
8718>I<EC01801403A21407140FEC1F005C14FF5BEB1FFEEB7FBEEB7E7E1320EB007CA2
14FCA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA291C7FCA25BA2133E
A2137EA2137C13FCB512FCA3193277B127>49 D<EC07E0EC3FFC4A7E903801F81F903903
E00F809038078007D90F0013C0491303131E5BA21507017C1480A2150F1600017E131E01
7F133E6E5A6D6C5AECE1E090381FFBC06DB4C7FC6D5A6D7E497F011E7F90387C7FE09038
F01FF048486C7E3807C007EB8003380F0001001E1300123E003C1478127C1278A215F800
F85C5A6C495A007813035D007C495A003C011FC7FC003E133E381F81FC380FFFF0000313
C0C648C8FC223479B127>56 D<161C163CA2167C16FCA21501821503A2ED077E150F150E
151CA21538A2157015F015E0EC01C0A2913803807F82EC0700A2140E141E141C5CA25CA2
5C49B6FCA25B913880003F49C7EA1F80A2130E131E131C133C13385B13F05B12011203D8
0FF0EC3FC0D8FFFE903807FFFEA32F367BB539>65 D<DB1FF013C09238FFFC010203EBFF
03913A0FF00F878091393F8003CF9139FE0001EF4948EB00FFD903F01500D90FE080495A
49488091C8123E137E13FE485A4848153CA2485AA248481538A2485A94C7FC123F5BA312
7F90CBFCA412FEA2EE03C0A25F127E160794C7FC5E160E007F151E6C5D5E6C6C147016F0
6C6C495A6C6CEB07C06C6C49C8FC6C6C133E6CB413FC90387FFFF0011F13C0D903FEC9FC
323775B437>67 D<0107B612C04915F017FC903A003F8001FEEE007FEF1F8092C7EA0FC0
EF07E05CEF03F0147E170102FE15F8A25CA21301A25CA2130317035CA2130718F04A1407
A2130F18E04A140F18C0011F151F18805CEF3F00133F177E91C85AA2494A5A4C5A017E4A
5A4C5A01FE4A5A047EC7FC49495A0001EC0FF8007FB612E0B7C8FC15F835337BB23A>I<
0107B712F05B18E0903A003F80001F1707170392C7FC17015C18C0147EA214FEA24A130E
A20101EC1E03041C13804A91C7FC163C13035E9138F001F891B5FC5B5EECE0011500130F
5E5C1707011F01015BEEC00E0280141E92C7121C133F173C91C812381778495DA2017E14
014C5A01FE14074C5A49141F00014AB45A007FB7FCB8FC94C7FC34337CB234>I<0107B5
48B512C0495CA2903C003FC0000FF0004B5CA292C75BA24A141F60147EA202FE143F95C7
FC5CA201015D177E5CA2010315FE5F5C91B6FC5B5F9138E00001A2010F14035F5CA2011F
14075F5CA2013F140F5F91C7FCA249141F5F137EA201FE143F94C8FC5B00015D3B7FFFF0
1FFFFCB55BA23A337BB239>72 D<91381FFFFE5C16FC9138003F80A31600A25D157EA315
FE5DA314015DA314035DA314075DA3140F5DA3141F5DA3143F92C7FCA2121C007E5B00FE
137EA214FE485BEAF80100E05B495A387007E038780FC06C48C8FCEA1FFCEA07F0273579
B228>74 D<0107B512C05BA29026003FC0C7FC5DA292C8FCA25CA2147EA214FEA25CA213
01A25CA21303A25CA21307A25CA2130FA25C17E0011F140117C05C1603013F1580160791
C7FCEE0F005B5E017E143EA201FE5CED01FC4913030001EC1FF8007FB6FCB7FC5E2B337C
B230>76 D<902607FFC0ED7FFC4917FF81D9003F4B1300611803023BED077CA2027BED0E
FC610273151C1838DAF1F01439F071F014E118E10101ED01C36102C1EC0383EF07030103
1607050E5BEC80F8171C0107ED380F6102001470A249EDE01FDC01C090C7FC130EEE0380
011E017C5C933807003E011C140EA2013C4A137E187C01385C5E017816FC6F485B1370ED
3FC001F0EC80016000011500D807F81503277FFF803E90B512C0B5EB3C01151C46337BB2
45>I<ED1FE0913801FFFC913807E03F91391F800FC091393E0003E002F8EB01F0495A49
48EB00F8494814FC4948147C49C8127E133E017E153E49153F485AA2485A12075B120F5B
121F177F5B123FA348C912FEA4EE01FC12FEEE03F8A217F0160717E0160F007E16C0EE1F
80A2EE3F006C157E5E5E6C6C495A000F4A5A6D495A0007EC1F806C6C013EC7FCD801F813
FC39007E07F090383FFF80D907FCC8FC303775B43B>79 D<0107B612C04915F883903A00
3F8001FEEE003FEF1F8092C713C0170F5C18E0147EA214FEEF1FC05CA201011680173F4A
1500177E010315FE5F4AEB03F8EE07E00107EC3FC091B6C7FC16F802E0C9FC130FA25CA2
131FA25CA2133FA291CAFCA25BA2137EA213FEA25B1201387FFFF0B5FCA233337CB234>
I<0107B512FE49ECFFC017F0903A003F8007F8EE01FCEE007E92C7127F835C1880147EA2
14FEEF7F005CA2010115FE5F4A13015F01034A5AEE0FC04A495A04FEC7FC49B512F016C0
9138E003E0ED01F8010F6D7E167C4A137EA2131FA25CA2013F14FEA291C7FCA24913015E
137EEF01C001FE150318805B00011607277FFFF0001400B5ECFE0EEE7E1CC9EA1FF8EE07
E032357BB238>82 D<913901FC018091380FFF03023F13C791387E07EF903A01F801FF00
49487E4A7F495A4948133E131F91C7FC5B013E143CA3137E1638A293C7FC137FA26D7E14
E014FE90381FFFC06D13F86D7F01017F6D6C7E020F7F1400153F6F7E150FA4120EA2001E
5D121CA2151F003C92C7FCA2003E143E5D127E007F5C6D485A9038C007E039F3F80FC000
F0B5C8FC38E03FFC38C00FF029377AB42B>I<0003B812C05A1880903AF800FC003F260F
C001141F0180150F01005B001EEE07001403121C003C4A5BA200380107140E127800705C
A2020F141E00F0161CC74990C7FCA2141FA25DA2143FA292C9FCA25CA2147EA214FEA25C
A21301A25CA21303A25CA21307A25C497E001FB512F05AA2323374B237>I<EB03F0EB0F
F890383E1C6090387C0FF0EBF807EA01F0EA03E00007EB03E0EA0FC0A2381F800715C0EA
3F00A2140F481480127EA2141F00FE14005A1506EC3F07EC3E0F150E147E007C141EECFE
1CEB01FCD83C03133C393E07BE38391F0E1E783907FC0FF03901F003C0202278A027>97
D<137EEA0FFE121F5B1200A35BA21201A25BA21203A25BA21207A2EBC3E0EBCFF8380FDC
3EEBF81F497E01E01380EA1FC0138015C013005AA2123EA2007E131F1580127CA2143F00
FC14005AA2147EA25CA2387801F85C495A6C485A495A6C48C7FCEA0FFCEA03F01A3578B3
23>I<14FCEB07FF90381F078090383E03C0EBFC013801F8033803F0073807E00F13C012
0F391F80070091C7FC48C8FCA35A127EA312FE5AA4007C14C0EC01E0A2EC03C06CEB0F80
EC1F006C137C380F81F03803FFC0C648C7FC1B2278A023>I<ED0FC0EC03FFA21680EC00
1FA31600A25DA2153EA2157EA2157CA215FCA2903803F0F8EB0FF8EB3E1DEB7C0F496C5A
EA01F0EA03E000071303D80FC05BA2381F8007A2D83F005BA2140F5A007E5CA2141F12FE
4891C7FC1506EC3F075DEC3E0E147E007C141EECFE1CEB01FCD83C03133C393E07BE3839
1F0E1E783907FC0FF03901F003C0223578B327>I<EB03F8EB0FFEEB3E0F9038F8078038
01F003EA03E0EA07C0120FEA1F801407D83F0013005C007E133EEB03F8387FFFE04848C7
FC00FCC8FCA45AA4EC0180EC03C0A2007CEB0780EC1F00003C133E6C13F8380F03E03807
FF80D801FCC7FC1A2277A023>I<151FED7FC0EDF0E0020113F0EC03E3A2EC07C316E0ED
C1C091380FC0005DA4141F92C7FCA45C143E90381FFFFEA3D9007EC7FC147CA414FC5CA5
13015CA413035CA413075CA3130FA25CA3131F91C8FCA35B133E1238EA7E3CA2EAFE7812
FC485AEA78E0EA3FC0000FC9FC244582B418>I<143FECFF80903803E1E6903807C0FF90
380F807FEB1F00133E017E133F49133EA24848137EA24848137CA215FC12074913F8A214
01A2D80FC013F0A21403120715E01407140F141F3903E03FC00001137FEBF0FF38007FCF
90381F0F801300141FA21500A25C143E1238007E137E5C00FE5B48485A387803E0387C0F
80D81FFFC7FCEA07F820317CA023>I<EB0FC0EA03FFA25CEA001FA391C8FCA25BA2133E
A2137EA2137CA213FCA29038F83F80ECFFE03901FBE0F09038FF80F8EC007849137C485A
5B5BA2484813FC5D5BA2000F13015D1380A2001F13035DEB0007EDC0C048ECC1E0020F13
C0003E1481A2007E1483ED0380007C1407160000FC140E151E48EB07F80070EB01F02335
7BB327>I<EB0180EB07E0A2130FEB07C0EB038090C7FCABEA01F0EA03FCEA0F1E120E12
1C123C1238EA783E1270A2137EEAF07CEA60FCC65AA212015BA212035BA2000713C0EBC1
E0000F13C01381A21383EB038013071400130E131EEA07F8EA01F013337AB118>I<133F
EA07FF5A13FEEA007EA3137CA213FCA213F8A21201A213F0A21203A213E0A21207A213C0
A2120FA21380A2121FA21300A25AA2123EA2127EA2127C1318EAFC1C133CEAF838A21378
137012F013F0EAF8E01279EA3FC0EA0F00103579B314>108 D<2703C003F8137F3C0FF0
0FFE01FFC03C1E783C1F07C1E03C1C7CF00F8F01F03B3C3DE0079E0026383FC001FC7FD9
7F805B007001005B5E137ED8F0FC90380FC00100E05FD860F8148012000001021F130360
491400A200034A13076049013E130FF081800007027EEC83C0051F138049017C1403A200
0F02FC1407053E130049495CEF1E0E001F01015D183C010049EB0FF0000E6D48EB03E03A
227AA03F>I<3903C007F0390FF01FFC391E787C1E391C7CF01F393C3DE00F26383FC013
80EB7F8000781300EA707EA2D8F0FC131F00E01500EA60F8120000015C153E5BA2000314
7E157C4913FCEDF8180007153C0201133801C013F0A2000F1578EDE070018014F016E000
1FECE1C015E390C7EAFF00000E143E26227AA02B>I<14FCEB07FF90381F07C090383E03
E09038FC01F0EA01F83903F000F8485A5B120F484813FCA248C7FCA214014814F8127EA2
140300FE14F05AA2EC07E0A2007CEB0FC01580141FEC3F006C137E5C381F01F0380F83E0
3803FF80D800FCC7FC1E2278A027>I<011E137C90387F81FF9039F3C387C09039E3EF03
E03901E1FE01D9C1FC13F0EBC3F8000313F0018314F814E0EA07871307000313C0120001
0F130316F01480A2011F130716E01400A249EB0FC0A2013EEB1F80A2017EEB3F00017F13
3E5D5D9038FF81F09038FDC3E09038F8FF80027EC7FC000190C8FCA25BA21203A25BA212
07A25BB5FCA325307FA027>I<3903C00FC0390FF03FF0391E78F078391C7DE03C393C3F
C0FC00381380EB7F00007814F8D8707E13701500EAF0FC12E0EA60F812001201A25BA212
03A25BA21207A25BA2120FA25BA2121FA290C8FC120E1E227AA020>114
D<EB03F0EB1FFCEB3C1EEB780FEBF007EA01E0140F0003131F13C0A2EBE00414007FEBFF
8014E06C13F06C13F8EB7FFC1307EB00FE147E143E123800FC133CA3147C00F013784813
F0EAF001387803E0383C0F80381FFE00EA03F818227AA01F>I<1303EB0F80A3131FA214
00A25BA2133EA2137EA2137C387FFFF8A2B5FC3800F800A21201A25BA21203A25BA21207
A25BA2120FA25B1460001F13F014E01300130114C01303001E1380EB07005BEA0F1EEA07
F8EA01E015307AAE19>I<EA01F0D803FC1307D80F1E5B000E5C121C123C00385CD8783E
133E1270A2017E137ED8F07C137CEA60FCC65A15FC00015C5BA2140100035C13E0166002
031370EDE0F0D807C014E0A20003EB07E116C09038E00FC1EC1FC3000190383FE3809038
F071E73A007FE0FF0090381F803C24227AA029>I<01F01338D803FC13FCEA0F1E120E12
1C123C0038147CEA783E0070143CA2137ED8F07C1338EA60FCC65A1578000114705BA215
F0000314E05BA2EC01C0A2EBC003158014071500EBE00EA26C6C5A3800F878EB7FE0EB1F
801E227AA023>I<011F137C90387FC1FF3A01E1E787803A03C0F703C0903880FE0FEA07
004813FC000E1580001E9038F80700001C91C7FC1301003C5B1218120013035CA31307A2
5C1506010F130F150E14800038141ED87C1F131C00FC143C1538013F5B39F07FC0E03970
F3C3C0393FE1FF80260F807EC7FC22227CA023>120 D<13F0D803FC1307D80F1E130F00
0E141F121C123C0038143FD8783E133E1270A2017E137ED8F07C137CEA60FCC65A15FC00
0114F85BA21401000314F013E0A2140315E0EA07C0A20003130715C0EBE00F141F000113
3F9038F07F8038007FEFEB1F8FEB001F1500A25C003E133E007E137E147C5C007C5BEA70
01495A38380780D83C1FC7FCEA0FFCEA07F020317AA025>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmbx9 9 12
/Fh 12 117 df<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C0C7A8B19>46
D<147814F81303131FEA03FFB5FCA3EAFC1F1200B3B2007FB512FEA41F317AB02C>49
D<ED1F80A24B7EA24B7EA34B7EA24A7FA34A7FA24A7F15CFA2020F7F1587021F80150302
3F80EC3E01A2027E80EC7C0002FC804A137FA20101814A133F0103814A131FA249B67EA2
4981A290271F8000077F91C77EA24982013E80017E82017C80A201FC8249157FB500F001
3FB512F0A43C347DB343>65 D<B812FCA4C69038E0001FEE03FE16011600177E173EA217
1EA3923803C01F170FA403071300A2150F153F91B5FCA4ECE03F150F1507A21503A592C8
FCABB612F8A430337DB238>70 D<EB7FFE0003B512E04814F8390FF00FFC391FF803FF80
6E138016C0157F6C5A6C5AEA0180C8FCEC7FFF010FB5FC90B6FC0003EBF07F000F1300EA
1FF8485A485A485A5BA315FF7F007F5B6D4813E03A3FF80FBFFF000FB5121F0003EBFC0F
39007FE00728217EA02B>97 D<EA01FC12FFA4120F1207ADEC07FC91387FFF8001FDB512
E09039FFF00FF89138C007FC91380003FE496D7E496D1380A217C0167FA217E0A917C0A2
16FF1780A26D4913006D495A9138C007FC9039F3F01FF801E1B512E0D9C07F1380902680
0FF8C7FC2B347EB331>I<903807FF80013F13F090B512FC3903FE01FE4848487EEA0FF8
EA1FF0EA3FE0A2007F6D5A496C5A153000FF91C7FCA9127F7FA2003FEC07807F6C6C130F
000FEC1F00D807FE133E3903FF80FCC6EBFFF8013F13E0010790C7FC21217DA027>I<16
F890390FFC07FE90387FFF9F48B6127F3907FC0FFC380FF003001F14FED9E001133E003F
ECFF1C1600A6001F5CEBF003000F5C3907FC0FF890B512E0486C1380D90FFCC7FC48C9FC
A37F7F90B512F015FE6CECFF8016E06C15F06C15F84815FC121F393F80001F48C7EA03FE
481401481400A46C14016C6CEB03FC6C6CEB07F86C6CEB0FF0D80FFCEB7FE00003B61280
C6ECFE00010F13E028327EA12C>103 D<EA03F0487E487E487EA66C5A6C5A6C5AC8FCA8
EA01FC12FFA4120F1207B3A5B512C0A412357DB418>105 D<3901F81F8000FFEB7FF0EC
FFF89038F9E3FC9038FBC7FE380FFF876C1307A213FEEC03FCEC01F8EC0060491300B1B5
12F0A41F217EA024>114 D<9038FFE1C0000713FF5A383F803F387E000F14075A14037E
A26C6CC7FC13FCEBFFE06C13FC806CEBFF80000F14C06C14E0C6FC010F13F0EB007F140F
00F0130714037EA26C14E06C13076CEB0FC09038C01F8090B5120000F913FC38E03FE01C
217DA023>I<133CA5137CA313FCA21201A212031207001FB51280B6FCA3D807FCC7FCB0
EC03C0A79038FE078012033901FF0F006C13FEEB3FFCEB0FF01A2F7EAE22>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmtt9 9 54
/Fi 54 127 df<EB0380497EA5EB1FF0EBFFFE0003EBFF804814C0001F14E09038E7DFF0
393F87C7F8387E07C3007C13C100FCEBC0FC12F814C1A300FCEBC0F800FE1470007F1400
1387EA3FFF7E6C13F86C13FE6CEBFF80C614C0010F13E06D13F014CFECC3F814C10038EB
C0FC127C00FE147CA412FC00FE14F8007E13C1007FEBC3F0383F87C79038F7FFE06CB512
C06C1480000314006C13FC38003FE0EB07C0A56D5A1E3A7CB327>36
D<131FEB7FC0497E5A80EA03F1EBE1F8EA07E013C0A513C15C9039C3F1FF80D9E3E113C0
3803E7E3EBEFC101FF1480913881F800EC01F0EA01FEEBFC0301F85B00031307D807FC5B
120F381FFE0FD83FBE5BEB3F1FD87E1F90C7FC149F38FC0FBF14FE1307ECFC020103EB0F
80EB01F8A238FE03FC387E07FE397F1FFF9F6CB61200149F6CEB0FFE390FFC03FC3903F0
00F822307EAE27>38 D<EB01C0EB03E0130F131FEB3FC0EB7F80EBFE00485A5B1203485A
5B485AA2485AA248C7FCA3127EA45AAC127EA47EA36C7EA26C7EA26C7E7F6C7E12017F6C
7EEB7F80EB3FC0EB1FE0130F1303EB01C0133A73B327>40 D<127012F812FE7E6C7E6C7E
EA0FE06C7E12037F6C7E1200137EA27FA2EB1F80A3EB0FC0A4EB07E0ACEB0FC0A4EB1F80
A3EB3F00A2137EA25B1201485A5B1207485AEA3FC0485A48C7FC5A12F81270133A7AB327
>I<130F497EA60078EB81E000FEEB87F000FF138FEBDFBF6CB512E06C14C0000F140000
0313FCC613F0A2000313FC000F13FF003F14C04814E039FFDFBFF0EB1F8F00FE13870078
EB81E00000EB8000A66DC7FC1C207BA627>I<120FEA3FC013E0EA7FF0A213F8A2123FA2
120F120113F01203EA07E0121FEA7FC0EAFF8013005A12700D14738927>44
D<007FB512F8B612FCA46C14F81E067C9927>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E
000A0A728927>I<1538157C15FCA2140115F8140315F0140715E0140F15C0141F158014
3F1500A25C147E14FE5C13015C13035C13075C130F5CA2131F5C133F91C7FC5B137E13FE
5B12015B12035BA212075B120F5B121F5B123F90C8FC5A127E12FE5AA25A12781E3A7CB3
27>I<EB07E0EB3FFC497E90B5FC4814803903FC3FC03907F00FE0390FE007F0EBC00339
1F8001F8A248C712FCA2003E147C007E147EA3007C143E00FC143FAC007E147EA46C14FC
A2EB8001001F14F8EBC003000F14F0EBE0073907F00FE03903FC3FC06CB512806C14006D
5A6D5AEB07E020307DAE27>I<130E131FA25B5BA25B5A5A127FB5FCA213BFEA7E3F1200
B3AA003FB512805A15C01580A21A2F79AE27>I<EB0FF0EB7FFC48B5FC4814804814C039
0FF81FE0391FE007F0393FC003F8EB8001D87F0013FC007E130012FE48147EA4157F153F
157F7E127E007F14FF7E6D5A381FE007380FF01F6CB6FC7E6C143F39007FFC7F90381FF0
7E90C7FCA215FCA2140115F8001F1303393F8007F0EC0FE0141FEC3FC09038C0FF806CB5
12005C6C13F8000313E0C6138020307DAE27>57 D<121EEA7F80A2EAFFC0A4EA7F80A2EA
1E00C7FCAC121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A20729F27>I<153815FC140114
07140FEC3FF8EC7FE0ECFFC001031300495AEB1FF8495A495A3801FF804890C7FCEA0FFC
485AEA7FF0EAFFC05BA27FEA7FF0EA1FF86C7EEA03FF6C7F38007FE06D7E6D7EEB07FE6D
7E010013C0EC7FE0EC3FF8EC0FFC14071401140015381E287CAA27>60
D<007FB512FEB7FCA4003F14FEC9FCA6003FB512FEB7FCA46C14FE20127D9F27>I<1270
12FC7E6C7E7FEA7FF0EA1FF86C7EEA03FF6C7F38007FE06D7E6D7EEB07FE6D7E010013C0
EC7FE0EC3FF8EC0FFC1407A2140FEC3FF8EC7FE0ECFFC001031300495AEB1FF8495A495A
3801FF804890C7FCEA0FFC485AEA7FF0EAFFC05B48C8FC5A12701E287CAA27>I<EBFFF8
000313FF000F14C0003F14E04814F09038C01FF839FF0003FC4813011400A21401007C13
03C7EA0FF8EC1FF0EC7FE0ECFFC0491300EB03FC495A5C495A5C131F5CA76DC7FC90C8FC
A7130F497E497EA46D5A6DC7FC1E2E7CAD27>I<EB01FE903807FF80011F13C0017F13E0
90B512F048EB03F83803FC013907F000FC390FE01F7C9038C07FFE381F80FF1301485A39
3E07F1FF007E13E0397C0FC07FEC803FA2EAFC1F00F8EB001FA800FCEB803FD87C0F133E
A2ECC07E397E07E0FC003E13F1393F03FFF86C6C13F0018013E0390FC07FC09038E01F1E
3907F0003FD803FC137F3901FF03FF6CEBFFFE6D13FC011F13F0010713C001011300202E
7DAD27>I<EB03F0497EA2497EA4143CEB1F3EA5EB3F3FA3EB3E1FA2017E7FA4496C7EA5
48486C7EA390B5FCA24880A3EBF003A248486C7EA4000F803A7FFC0FFF8000FF15C06D5A
497E007F1580222F7EAE27>I<387FFFFC14FFB612C06C80813907E00FF81407EC01FC6E
7EA2157E157F811680151FA316C0150FABED1F80A3153F1600A25D15FEA24A5A4A5A140F
007FB55A5DB65A6C91C7FC14FC222E7FAD27>68 D<007FB5FCB612E081816C803907E003
FEEC00FF81ED3F80151F16C0150FA6151F1680153FED7F005DEC03FE90B55A5D5D5D92C7
FC01E0C8FCADEA7FFEB5FCA36C5A222E7FAD27>80 D<90387FC0E03901FFF1F0000713FF
5A5AEA3FE0EB801F387F000F007E130712FE5A1403A3EC01E06C90C7FC127E127FEA3FC0
13F86CB47E6C13F86C13FE6CEBFF80C614C0010F13E0010013F0140FEC07F81403140115
FC1400127812FCA46CEB01F8A26C130390388007F09038F01FE090B5FC15C0150000F85B
38701FF81E307CAE27>83 D<007FB61280B712C0A439FC03F00FA60078EC0780000091C7
FCB3AB90B512C04880A36C5C222E7EAD27>I<393FFC1FFE387FFE3F815D383FFC1F3903
F00FE001F85B1201EBFC1F00005CEBFE3F017E90C7FCEB7F7FEB3F7E14FE6D5AA26D5AA2
6D5AA21303130780130F80131F80EB3F7E147F497E017E7F141F01FC7F140FD801F87F14
071203496C7E120701E07F3A7FFC0FFF8000FF15C06D5A497E007F1580222E7EAD27>88
D<003FB512FE4814FFA4007EC712FEEC01FCA2EC03F8EC07F0A2003CEB0FE0C7EA1FC0A2
EC3F80EC7F00A214FE5C1301495A5C1307495A5C131F495A91C7FC5B13FEA2485A484813
1E153F485A485AA2485A485AA248C7FCB7FCA46C14FE202E7DAD27>90
D<387FFFF0B512F8A314F000FCC7FCB3B3ACB512F014F8A36C13F0153A71B327>I<387F
FFF0B512F8A37EEA0001B3B3ACEA7FFFB5FCA36C13F0153A7EB327>93
D<007FB512F8B612FCA46C14F81E067C7E27>95 D<3803FFC0000F13F04813FC4813FF81
1380EC1FC0381F000F000480C71207A2EB0FFF137F0003B5FC120F5A383FFC07EA7FC013
0012FE5AA46C130F007F131FEBC0FF6CB612806C15C07E000313F1C69038807F8022207C
9F27>97 D<EA7FE0487EA3127F1203A914FF01F313C090B512F08181EC81FE49C67E49EB
3F8049131F16C049130FA216E01507A6150F16C07F151F6DEB3F80157F6DEBFF009038FF
83FEECFFFC5D5D01F313C02601E0FEC7FC232E7FAD27>I<EB0FFF017F13C048B512E048
14F05A380FF807EA1FE0393FC003E0903880008048C8FC127EA212FE5AA67E127EA2007F
14F0393F8001F813C0381FE003390FF80FF06CB5FC6C14E06C14C06C6C1300EB0FF81D20
7B9F27>I<EC3FF04A7EA3143F1401A9EB0FE1EB7FFD48B5FC5A5A380FF83F381FE00F38
3FC007EB8003EA7F00007E1301A212FE5AA67E007E1303A2127F6C1307EB800F381FE01F
380FF03F6CB612C06C15E06C13FD38007FF9D91FE013C0232E7EAD27>I<EB0FF8EB3FFE
90B51280000314C04814E0390FFC0FF0391FE003F8EBC001D83F8013FC48C7FC127E157E
12FEB612FEA415FC00FCC8FC7E127E127F6C143C6D137E6C7E01F013FE390FFC07FC6CB5
FC000114F86C14F0013F13C0903807FE001F207D9F27>I<EC1FF0ECFFF84913FC4913FE
5BEB0FF014C0011F137CEC8000A6007FB512F0B612F8A36C14F039001F8000B3A4003FB5
12C04814E0A36C14C01F2E7EAD27>I<153F90391FC0FF80D97FF313C048B612E05A4814
EF390FF07F873A1FC01FC3C0EDC000EB800F48486C7EA66C6C485AEBC01FA2390FF07F80
90B5C7FC5C485BEB7FF0EB1FC090C9FCA27F6CB5FC15E015F84814FE4880EB8001007EC7
EA3F80007C140F00FC15C0481407A46C140F007C1580007F143F6C6CEB7F009038F807FF
6CB55A000714F86C5CC614C0D90FFCC7FC23337EA027>I<EA7FE0487EA3127F1203A914
7F9038F1FFC001F713F090B5FC8114C1EC01FCEBFE005B5BA25BB03A7FFF83FFE0B500C7
13F0A36C018313E0242E7FAD27>I<130F497E497EA46D5A6DC7FC90C8FCA7383FFF8048
7FA37EEA000FB3A4007FB512F0B6FC15F815F07E1D2F7BAE27>I<143C147E14FFA4147E
143C1400A73801FFFE4813FFA37EC7123FB3B0147E1238007C13FE38FE01FC1303B512F8
14F06C13E06C13803807FE0018407CAE27>I<387FFF80B57EA37EEA000FB3B2007FB512
F8B612FCA36C14F81E2E7CAD27>108 D<397F07C01F3AFF9FF07FC09039FFF9FFE091B5
7E7E3A0FFC7FF1F89038F03FC001E0138001C01300A3EB803EB03A7FF0FFC3FF486C01E3
138001F913E701F813E36C4801C313002920819F27>I<387FE07F39FFF1FFC001F713F0
90B5FC6C80000313C1EC01FCEBFE005B5BA25BB03A7FFF83FFE0B500C713F0A36C018313
E024207F9F27>I<EB1FE0EB7FF83801FFFE487F481480390FF03FC0391FC00FE0393F80
07F0EB00034814F8007E1301A248EB00FCA76C1301007E14F8A2007F1303393F8007F0A2
391FE01FE0390FF03FC06CB512806C14006C5B38007FF8EB1FE01E207C9F27>I<387FE0
FFD8FFF313C090B512F0816C800003EB81FE49C67E49EB3F8049131F16C049130FA216E0
1507A6150F16C07F151F6DEB3F80157F6DEBFF009038FF83FEECFFFC5D5D01F313C0D9F0
FEC7FC91C8FCAC387FFF80B57EA36C5B23317F9F27>I<397FFC03FC39FFFE0FFF023F13
804A13C0007F90B5FC39007FFE1F14F89138F00F809138E002004AC7FC5CA291C8FCA213
7EAD007FB57EB67EA36C5C22207E9F27>114 D<9038FFF3800007EBFFC0121F5A5AEB80
3F38FC000F5AA2EC07806C90C7FCEA7F8013FC383FFFF06C13FC000713FF00011480D800
0F13C09038003FE014070078EB03F000FC1301A27E14036CEB07E0EBE01F90B512C01580
150000FB13FC38707FF01C207B9F27>I<133C137EA8007FB512F0B612F8A36C14F0D800
7EC7FCAE1518157EA415FE6D13FC1483ECFFF86D13F06D13E0010313C0010013001F297E
A827>I<397FE01FF8486C487EA3007F131F00031300B21401A21403EBFC0F6CB612E016
F07EEB3FFE90390FF87FE024207F9F27>I<3A7FFC0FFF80486C4813C0A36C486C13803A
07C000F800EBE00100035CA2EBF00300015CA2EBF80700005CA390387C0F80A36D48C7FC
A3EB3F3FEB1F3EA214FE6D5AA36D5AA26D5A22207E9F27>I<3A7FFE07FFE000FF15F06D
5A497E007F15E03A0F80001F00A36D5B0007143EA414F0EBC1F83903E3FC7CA4EBE79EA2
00011478A301F713F8A2EBFF0F6C5CA3EBFE0790387C03E024207F9F27>I<393FFC1FFF
486C5A168016006C487E3901F807E06C6C485A4A5A017E90C7FC6D5AEB1F7E5C6D5A1307
6D5A5C80497E130F497E143EEB3E3FEB7E1F90387C0F8001F87F00016D7E3803F0033A7F
FE1FFF80A2B54813C06C486C1380A222207E9F27>I<3A7FFC0FFF80486C4813C0A36C48
6C13803A07E000F800000313015D13F00001130301F85B1200A26D485A137CA290387E0F
80133EA2011F90C7FC5CA2130F149E14BE130714FC1303A25C1301A25CA213035CA21307
5C1208EA3E0F007F5B131FD87E7FC8FCEA7FFE6C5A5B6C5AEA07C022317E9F27>I<001F
B512FE4814FFA490380001FEEC03FCEC07F8EC0FF0001EEB1FE0C7EA3FC0EC7F80ECFF00
495A495A495AEB1FE0495A495A49C7FC485A4848131E4848133F485A485A485A485AB7FC
A46C14FE20207E9F27>I<127812FCB3B3B3A21278063A70B327>124
D<3901F003803903FC07C0000F130F381FFE1F393FFF7F80397FBFFF0038FE1FFE486C5A
00F813F0387003E01A0A7AAD27>126 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmr9 9 68
/Fj 68 128 df<91393FE00FE0903A01FFF83FF8903A07E01EF83C903A1F800FF07E903A
3F001FE0FE017E133F4914C0485A1738484890381F8000ACB812C0A33B03F0001F8000B3
A7486C497EB50083B5FCA32F357FB42D>11 D<EC1FE0ECFFFC903803F01E90390FC00780
EB1F8090393F000FC0017E131F5BA2485AED0F8092C7FCA9ED0FC0B7FCA33901F8001F15
0FB3A6486CEB1FE0267FFFC1B5FCA328357FB42B>I<14C01301EB0380EB0F00130E5B13
3C5B5BA2485A485AA212075B120F90C7FC5AA2121E123EA3123C127CA55AB0127CA5123C
123EA3121E121FA27E7F12077F1203A26C7E6C7EA213787F131C7F130FEB0380EB01C013
00124A79B71E>40 D<12C07E1270123C121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C
133C133EA2131E131FA37F1480A5EB07C0B0EB0F80A514005BA3131E133EA2133C137C13
7813F85BA2485A485AA2485A48C7FC120E5A123C12705A5A124A7CB71E>I<123C127EB4
FCA21380A2127F123D1201A412031300A25A1206120E120C121C5A5A126009177A8715>
44 D<B512F0A514057F921A>I<123C127E12FFA4127E123C08087A8715>I<1530157815
F8A215F01401A215E01403A215C01407A21580140FA215005CA2143EA2143C147CA21478
14F8A25C1301A25C1303A25C1307A2495AA291C7FC5BA2131E133EA2133C137CA2137813
F8A25B1201A25B1203A2485AA25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8
A25A12601D4B7CB726>I<EB0FE0EB7FFCEBF83E3903E00F803907C007C0EB8003000F14
E0391F0001F0A24814F8A2003E1300007E14FCA500FE14FEB2007E14FCA56CEB01F8A36C
14F0A2390F8003E03907C007C0A23903E00F803900F83E00EB7FFCEB0FE01F347DB126>
I<13075B5B137FEA07FFB5FC13BFEAF83F1200B3B3A2497E007FB51280A319327AB126>
I<EB3FC0EBFFF0000313FC380F80FF391E007F80001CEB3FC048EB1FE048130F15F00060
130712FC6C14F87E1403A3007E1307123CC7FC15F0A2140F15E0EC1FC0A2EC3F80150014
7E5C495A5C495A495A495A49C7FC133E133C4913185B485A48481330485A48C7FC001C14
70001FB512F05A5AB612E0A31D327CB126>I<EB1FE0EBFFFC4813FF3907E03F80390F00
1FC0001EEB0FE0001CEB07F0123F018013F8140313C01380A2381F0007C7FC15F0A2EC0F
E015C0141FEC3F80EC7E00EB01F8EB7FE014FCEB003FEC1FC0EC0FE0EC07F015F8140315
FC140115FEA3127EB4FCA415FC48130312780070EB07F86C14F0003C130F001FEB1FE039
0FE03F800003B51200C613FCEB1FE01F347DB126>I<EC01C0A214031407A2140F141FA2
143F147F146F14CF1301EB038F140F1307130E130C131C13381330137013E013C0EA0180
120313001206120E120C5A123812305A12E0B71280A3C7380FC000A94A7E0107B51280A3
21337EB226>I<000C14C0380FC00F90B5128015005C5C14F014C0D80C18C7FC90C8FCA9
EB0FC0EB7FF8EBF07C380FC03F9038001F80EC0FC0120E000CEB07E0A2C713F01403A215
F8A41218127E12FEA315F0140712F8006014E01270EC0FC06C131F003C14806CEB7F0038
0F80FE3807FFF8000113E038003F801D347CB126>I<14FE903807FF80011F13E090383F
00F0017C13703901F801F8EBF003EA03E01207EA0FC0EC01F04848C7FCA248C8FCA35A12
7EEB07F0EB1FFC38FE381F9038700F809038E007C039FFC003E0018013F0EC01F8130015
FC1400A24814FEA5127EA4127F6C14FCA26C1301018013F8000F14F0EBC0030007EB07E0
3903E00FC03901F81F806CB51200EB3FFCEB0FE01F347DB126>I<1230123C003FB6FCA3
4814FEA215FC0070C7123800601430157015E04814C01401EC0380C7EA07001406140E5C
141814385CA25CA2495A1303A3495AA2130FA3131F91C7FCA25BA55BA9131C20347CB126
>I<EB0FE0EB7FFC90B5FC3903F01F803907C007C0390F0003E0000EEB01F0001E130000
1C14F8003C1478A3123EA2003F14F86D13F0EBC001D81FF013E09038F803C0390FFE0780
3907FF0F006C13DE6C13F87EEB3FFE8001F713C0D803E313E0D8078013F0390F007FF800
1E131F003EEB07FC003C1303481301EC007E12F848143EA2151EA37E153C1278007C1478
7E6C14F0390F8003E03907F01FC00001B5120038007FFCEB1FE01F347DB126>I<EB0FE0
EB7FF8EBFFFE3803F83F3907E00F80390FC007C0D81F8013E0EC03F0EA3F0048EB01F812
7EA200FE14FC1400A415FEA5007E1301A2127F7E1403EA1F80000F13073807C00E3803E0
1C3801F03838007FF090381FC0FC90C7FC1401A215F8A215F01403001F14E0383F800715
C0140FEC1F809038003F00001C137E381F01FC380FFFF0000313C0C690C7FC1F347DB126
>I<123C127E12FFA4127E123C1200B0123C127E12FFA4127E123C08207A9F15>I<15E0A3
4A7EA24A7EA34A7EA3EC0DFE140CA2EC187FA34A6C7EA202707FEC601FA202E07FECC00F
A2D901807F1507A249486C7EA301066D7EA2010E80010FB5FCA249800118C77EA2498116
3FA2496E7EA3496E7EA20001821607487ED81FF04A7ED8FFFE49B512E0A333367DB53A>
65 D<B7FC16E016F83A03FC0003FE0001EC00FFEE7F80EE3FC0161F17E0160F17F0A617
E0161F17C0EE3F80EE7F0016FEED03FC90B612F05E9039FC0007FCED00FEEE3F80EE1FC0
EE0FE017F0160717F8160317FCA617F81607A2EE0FF0EE1FE0163FEE7FC00003913803FF
00B75A16F816C02E337DB236>I<DA03FE130C91393FFF801C91B512E0903A03FE01F83C
903A0FF0003C7CD91FC0EB0EFCD97F80130701FEC7120348481401000315005B4848157C
485A173C485A171C123F5B007F160CA390C9FC481600AB7E6D150CA3123F7F001F161C17
186C7E17386C6C15306C6C15706D15E012016C6CEC01C0D97F80EB0380D91FC0EB0F00D9
0FF0131ED903FE13FC0100B512F0023F13C0DA03FEC7FC2E377CB437>I<B77E16F016FE
3A01FE0001FF00009138003FC0EE0FE0707E707E707E707E177E177FEF3F80A2EF1FC0A3
EF0FE0A418F0AA18E0A3171F18C0A21880173F18005F17FE5F4C5AEE07F04C5AEE3FC000
014AB45AB748C7FC16F8168034337EB23B>I<B812C0A3D803FCC7127F0001150FEE03E0
1601A21600A21760A403061330A41700150EA2151E157E90B512FEA39038FC007E151E15
0EA21506170CA3171892C7FCA41738A21770A217F01601160316070003157FB812E0A32E
337DB234>I<B81280A3D803FCC7FC0001151FEE07C01603A21601A21600A41760150CA3
1700A2151CA2153C15FC90B5FCA3EBFC00153C151CA2150CA592C8FCAB487EB512FEA32B
337DB232>I<DA03FE130C91393FFF801C91B512E0903A03FE01F83C903A0FF0003C7CD9
1FC0EB0EFCD97F80130701FEC7120348481401000315005B4848157C485A173C485A171C
123F5B007F160CA390C9FC4893C7FCAA0303B512E07E7F92390003FE00705A123F7F121F
A26C7E7F12076C7E7F6C6C14036C7E6D6C1307D91FC0EB0E7CD90FF0EB1C3CD903FEEBF8
1C0100B5EAF00C023F01C0C7FCDA03FEC8FC33377CB43C>I<B5D8FE03B512F8A3000190
C73807FC006C486E5AB390B7FCA349C71203B3A3486C4A7EB5D8FE03B512F8A335337EB2
3A>I<B512FEA3000113006C5AB3B3A7487EB512FEA317337EB21C>I<017FB5FCA3903800
3FE0EC1FC0B3B1127EB4FCA4EC3F805A0060140000705B6C13FE6C485A380F03F03803FF
C0C690C7FC20357DB227>I<B512FEA3D803FEC9FC6C5AB3A9EE0180A416031700A45EA2
5E5E5E5E16FE00031407B7FCA329337DB230>76 D<D8FFFC923801FFF86D5DA20003EFFE
00D801BFED06FCA3D99F80140CA2D98FC01418A3D987E01430A2D983F01460A3D981F814
C0A3D980FCEB0180A2027EEB0300A36E1306A26E6C5AA36E6C5AA36E6C5AA26E6C5AA36E
6C5AA3913800FD80A2037FC7FCA3486C133ED80FF04B7EB5011C90387FFFF8A33D337CB2
46>I<D8FFFE91381FFFF87F80C6030013006E143CD9DFE01418EBCFF0A2EBC7F8EBC3FC
A2EBC1FEEBC0FF6E7EA26E7E6E7EA26E7E6E7E6E7EA26E7E6E7EA2ED7F80ED3FC0ED1FE0
A2ED0FF0ED07F8A2ED03FCED01FEED00FFA2EE7F98EE3FD8A2EE1FF8160F1607A2160316
01A2486C1400D807F81578B500C01438A2171835337EB23A>I<EC07FC91387FFFC09039
01FC07F0903907E000FCD90F80133E013FC76C7E017E6E7E496E7E48486E7E48486E7EA2
48486E7E000F8249157E001F167FA24848ED3F80A2007F17C0A290C9121FA24817E0AB6C
17C06D153FA3003F17806D157FA2001F17006D5D000F5E6C6C4A5AA26C6C4A5A00015E6C
6C4A5A017E4A5A6D4A5AD91FC0017FC7FCD907E013FC903901FC07F09039007FFFC0DA07
FCC8FC33377CB43C>I<B612FEEDFFC016F03A03FC0007FC0001EC00FE167FEE3F80EE1F
C017E0160FA217F0A617E0A2EE1FC0A2EE3F80EE7F0016FEED07F890B65A168001FCC9FC
B3A2487EB512F8A32C337DB234>I<B612FCEDFF8016F03A01FE0007FC0000EC01FEED00
7F707E707E83160F83A65FA24C5AA24C5A047EC7FC4B5AED0FF090B612C093C8FC9039FE
001FC0ED07F06F7E6F7E150082167E167FA583A5180C17C0A2043F131C486C1618B500FE
EB1FE0040F1338933807F070C93801FFE09338003F8036357EB239>82
D<90381FE00390387FFC0748B5FC3907F01FCF390F8003FF48C7FC003E80814880A20078
8000F880A46C80A27E92C7FC127F13C0EA3FF013FF6C13F06C13FF6C14C06C14F0C68001
3F7F01037F9038003FFF140302001380157F153FED1FC0150F12C0A21507A37EA26CEC0F
80A26C15006C5C6C143E6C147E01C05B39F1FC03F800E0B512E0011F138026C003FEC7FC
22377CB42B>I<007FB712FEA390398007F001D87C00EC003E0078161E0070160EA20060
160600E01607A3481603A6C71500B3AB4A7E011FB512FCA330337DB237>I<B500FE9038
1FFFF8A3000190C813006C48153C1718B3AF1738017F1530A217706D6C1460011F15E06E
495A010F14036D6C495A6D6C49C7FCD901FC131E6DB413FC91383FFFF0020F13C0020190
C8FC35357EB23A>I<003FB612FCA39039F80007F813C090C7EA0FF0003EEC1FE0123C00
38EC3FC00078EC7F801270EDFF004A5AA20060495AA24A5A4A5AC7FC4A5A4A5AA24A5A4A
C7FCA2495A495AA2495A495AA24948130C495AA2495A49C7FCA24848141CA2485A485A16
38485A4848147816F84848130148481307153FB7FCA326337CB22F>90
D<EAFFF0A4EAF000B3B3B3ADEAFFF0A40C4B79B715>I<EAFFF0A41200B3B3B3AD12FFA4
0C4B7FB715>93 D<EB7F803803FFF0380F80FC381C003E003F133F6D6C7E6E7EA26E7EEA
1F00C7FCA4EB01FF131FEBFF873803FC07EA0FF0EA1FC0EA3F80127F13004815C05AA314
0FA26C131F6C133B3A3F8071F180391FC1E1FF2607FFC013003900FE003C22237DA126>
97 D<EA03F012FFA312071203AEEC3F80ECFFE09038F3C0F89038F7007E01FE7F49EB1F
8049EB0FC05BED07E016F0A2150316F8AA16F0150716E0A2ED0FC07F6DEB1F8001ECEB3F
0001CF137C90388381F8903801FFE0C76CC7FC25357EB32B>I<EB07F8EB3FFF9038FC07
C03901F000E03903E003F03807C007120FEA1F80123F90380003E04890C7FCA2127E12FE
AA127FA26C14187F001F14386D1330000F14706C6C13E03903F001C03900FC0F8090383F
FE00EB07F01D237EA122>I<153FEC0FFFA3EC007F81AEEB07F0EB3FFCEBFC0F3901F003
BF3907E001FF48487E48487F8148C7FCA25A127E12FEAA127E127FA27E6C6C5BA26C6C5B
6C6C4813803A03F007BFFC3900F81E3FEB3FFCD90FE0130026357DB32B>I<EB0FE0EB7F
FCEBF83F3903F00F80D807E013C0390FC007E0381F800315F0EA3F0014014814F8127EA2
12FEA2B6FCA248C8FCA5127E127FA26C1418A26C6C1338000F14306D13706C6C13E03901
F003C03900FC0F00EB3FFEEB07F01D237EA122>I<EB01FCEB07FF90381F078090383E0F
C0EB7C1F13FCEA01F8A20003EB070049C7FCACB512F0A3D803F0C7FCB3A7487E387FFFE0
A31A357FB417>I<151F90391FC07F809039FFF8E3C03901F07FC73907E03F033A0FC01F
83809039800F8000001F80EB00074880A66C5CEB800F000F5CEBC01F6C6C48C7FCEBF07C
380EFFF8380C1FC0001CC9FCA3121EA2121F380FFFFEECFFC06C14F06C14FC4880381F00
01003EEB007F4880ED1F8048140FA56C141F007C15006C143E6C5C390FC001F83903F007
E0C6B51280D91FFCC7FC22337EA126>I<EA03F012FFA312071203AEEC1FC0EC7FF09038
F1E0FC9038F3807C9038F7007E13FE497FA25BA25BB3486CEB7F80B538C7FFFCA326347E
B32B>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCAAEA07E012FFA3120F1207B3A6EA
0FF0B5FCA310337EB215>I<EA03F012FFA312071203AF913803FFE0A36E1300EC00F8EC
01E05D4A5A020FC7FC141C5C5C14F0EBF3F8EBF7FC13FEEBFC7EEBF87F496C7E141F6E7E
8114076E7E8114016E7E81486CEBFF80B500C313F0A324347EB329>107
D<EA07E012FFA3120F1207B3B3A7EA0FF0B5FCA310347EB315>I<2703F01FE013FF00FF
90267FF80313C0903BF1E07C0F03E0903BF3803E1C01F02807F7003F387FD803FE147049
6D486C7EA2495CA2495CB3486C496C487EB53BC7FFFE3FFFF0A33C217EA041>I<3903F0
1FC000FFEB7FF09038F1E0FC9038F3807C3907F7007EEA03FE497FA25BA25BB3486CEB7F
80B538C7FFFCA326217EA02B>I<EB07F0EB3FFE9038FC1F803901F007C03903C001E000
078048486C7E48C7127CA248147E003E143E007E143FA300FE1580A8007E1500A36C147E
A26C147C6D13FC6C6C485A00075C3903F007E03900FC1F80D93FFEC7FCEB07F021237EA1
26>I<3903F03F8000FFEBFFE09038F3C0F89038F7007ED807FE7F6C48EB1F804914C049
130F16E0ED07F0A3ED03F8A9150716F0A216E0150F16C06D131F6DEB3F80160001FF13FC
9038F381F89038F1FFE0D9F07FC7FC91C8FCAA487EB512C0A325307EA02B>I<903807F0
0390383FFC07EBFC0F3901F8038F3807E001000F14DF48486CB4FC497F123F90C77E5AA2
5A5AA9127FA36C6C5B121F6D5B000F5B3907E003BF3903F0073F3800F81EEB3FF8EB0FE0
90C7FCAAED7F8091380FFFFCA326307DA029>I<3803E07C38FFE1FF9038E38F809038E7
1FC0EA07EEEA03ECA29038FC0F8049C7FCA35BB2487EB512E0A31A217FA01E>I<EBFF06
000713CE381F00FE003C133E48131E140E5A1406A27EA200FE90C7FC6C7EEA7FFC383FFF
C014F0000F7F6C7FC67FEB0FFF1300EC3F8000C0131F140F6C1307A37E15006C5B6C130E
6C5B38F7807838E1FFE038C07F8019237EA11E>I<1330A51370A313F0A21201A2120312
07381FFFFEB5FCA23803F000AF1403A814073801F806A23800FC0EEB7E1CEB1FF8EB07E0
182F7FAD1E>I<D803F0133F00FFEB0FFFA30007EB007F000380B35DA35D12016D481380
0000903803BFFC90387E073FEB1FFED907F8130026227EA02B>I<B5EBFFF0A3D80FF0EB
3F800007EC1F000003140E150C6D131C00011418A26C6C5BA26D1370017E1360137F6D5B
A290381F8180A214C3010F90C7FCA2EB07E6A214FE6D5AA26D5AA36D5AA2146024217E9F
29>I<B53A1FFF81FFF0A33C07F801FC003F8001F049EB1E0000030100141C816C6C017C
1318A26D017E1338000002FE1330A290267E01FF5B159F168090263F030F5BA216C0903A
1F8607C180A202C613E390260FCC0390C7FCA2D907FC13F6ECF80116FE6D486C5AA36D48
1378A36D48133034217F9F37>I<B53801FFF8A32603FE0013806C48EB7C000000147801
7E1370017F5B90383F81C090381F8380D90FC3C7FCEB07E614FE6D5A6D5A6D7E80805B90
38039F809038071FC09038060FE0EB0C0790381C03F0496C7E01707FEBF000000180000F
ECFF8026FFFC0313FCA326207F9F29>I<3A7FFF807FF8A33A07F8001FC00003EC0F8000
01EC070015066C6C5BA26D131C017E1318A26D5BA2EC8070011F1360ECC0E0010F5BA290
3807E180A214F3010390C7FC14FBEB01FEA26D5AA31478A21430A25CA214E05CA2495A12
78D8FC03C8FCA21306130EEA701CEA7838EA1FF0EA0FC025307F9F29>I<003FB512F0A2
EB000F003C14E00038EB1FC00030EB3F800070137F1500006013FE495A13035CC6485A49
5AA2495A495A49C7FC153013FE485A12035B48481370485A001F14604913E0485A387F00
0348130F90B5FCA21C207E9F22>I<B712F8A22502809426>I<001C1370387F01FC00FF13
FEA4007F13FC381C0070170879B226>127 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmr6 6 2
/Fk 2 51 df<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>49
D<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013
FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600
185A5A383FFFF85AB512F0A216217CA01E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmr7 7 2
/Fl 2 51 df<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521>49
D<13FF000313E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC15
005C143E147E147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA018039030003
0012065A001FB5FC5A485BB5FCA219267DA521>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmr10 10 77
/Fm 77 128 df<DA0FF813FC91397FFF07FF903B01F807DF83C0903A07E001FF0F903B1F
8007FE1FE090393F000FFC137E16F85B9338F007804848010790C7FC1503ACB812F8A328
01F80003F0C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA30>11
D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007017E497EA25B
A2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C497E267FFFE0B5
12C0A32A3B7FBA2E>I<EC0FFC91387FFF70903901F803F0903807E00790381F800FEB3F
00137EA25B150748481303ADB7FCA33901F80003B3AB486C497E267FFFE0B512C0A32A3B
7FBA2E>I<DA0FF0EB1FF0DA7FFEEBFFFC903B01F80F83F00F903C07E001CFC00380903C
1F8000FF0001C090273F0007FE130F017E4948497EA2495CA248485C03076E5A03030203
C7FC95C8FCA9F007E0BAFCA33C01F80003F0001F1807B3AA486C496C497E267FFFE0B500
C1B51280A3413B7FBA45>I<121C127FEAFF80A8EA7F00AB123EAB121CABC7FCA8121C12
7FEAFF80A5EA7F00121C093C79BB17>33 D<001C131C007F137F39FF80FF80A26D13C0A3
007F137F001C131C00001300A40001130101801380A20003130301001300485B00061306
000E130E485B485B485B006013601A197DB92A>I<121C127FEAFF80A213C0A3127F121C
1200A412011380A2120313005A1206120E5A5A5A12600A1979B917>39
D<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485AA2485AA212075B120F90C7FC
A25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA27F12077F1203A26C7EA26C7E
1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20>I<12C07E12707E7E7E120F
6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA2131F7FA21480A3EB07C0A6EB03E0
B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C1378A25BA2485A485AA2485A48C7
FC120E5A5A5A5A5A13527CBD20>I<121C127FEAFF80A213C0A3127F121C1200A4120113
80A2120313005A1206120E5A5A5A12600A19798817>44 D<B512FCA516057F941C>I<12
1C127FEAFF80A5EA7F00121C0909798817>I<150C151E153EA2153C157CA2157815F8A2
15F01401A215E01403A215C01407A21580140FA215005CA2141E143EA2143C147CA21478
14F8A25C1301A25C1303A2495AA25C130FA291C7FC5BA2131E133EA2133C137CA2137813
F8A25B1201A25B1203A25B1207A25B120FA290C8FC5AA2121E123EA2123C127CA2127812
F8A25A12601F537BBD2A>I<EB03F8EB1FFF90387E0FC09038F803E03901E000F0484813
780007147C48487FA248C77EA2481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F14
1F6C1580A36C15006D5B000F143EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91F
FFC7FCEB03F8233A7DB72A>I<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E
007FB512F0A31C3879B72A>I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E
486D7E486D7E123000706D7E126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D
14035D4A5A5D140F4A5A4A5A92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B
49130348481400485A485A000EC75A000FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8
EB3FFF4913C03901F80FF03903C007F848486C7E380E0001000F80381FE0006D7FA56C5A
6C5AC85A1401A25D4A5AA24A5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01
FC816E7EED7F80A216C0A2153F16E0A2121EEA7F80487EA416C049137F007F1580007EC7
FC0070ECFF006C495A121E390F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A
7DB72A>I<1538A2157815F8A2140114031407A2140F141F141B14331473146314C31301
1483EB030313071306130C131C131813301370136013C01201EA038013005A120E120C5A
123812305A12E0B712F8A3C73803F800AB4A7E0103B512F8A325397EB82A>I<0006140C
D80780133C9038F003F890B5FC5D5D158092C7FC14FC38067FE090C9FCABEB07F8EB3FFE
9038780F803907E007E090388003F0496C7E12066E7EC87EA28181A21680A4123E127F48
7EA490C71300485C12E000605C12700030495A00385C6C1303001E495A6C6C485A3907E0
3F800001B5C7FC38007FFCEB1FE0213A7CB72A>I<EC3FC0903801FFF0010713FC90380F
E03E90383F800790387E001F49EB3F804848137F485AA2485A000FEC3F0049131E001F91
C7FCA2485AA3127F90C9FCEB01FC903807FF8039FF1E07E090383801F0496C7E01607F01
E0137E497FA249148016C0151FA290C713E0A57EA56C7E16C0A2121FED3F807F000F1500
6C6C5B15FE6C6C5B6C6C485A3900FE07F090383FFFC06D90C7FCEB03FC233A7DB72A>I<
EB03F8EB1FFF017F13C09038FC07F03901E001F848486C7E4848137C90C77E48141E000E
141F001E80A3121FA27F5D01E0131E6C6C133E01FC133C6D5B6C6C6C5AECC1E06CEBF3C0
6C01FFC7FC6C5BEB3FFF6D13C081017F13F801F07F3903E07FFE3907801FFF48486C1380
481303003E6D13C0003CEB007F007C143F0078EC0FE000F814075A1503A21501A36C15C0
12781503007C15806CEC07006C5C6C6C131ED807E0137C3903F803F0C6B55A013F1380D9
07FCC7FC233A7DB72A>56 D<EB03F8EB1FFF017F13C09038FC07E03903F803F048486C7E
48486C7E49137E121F48487FA2007F158090C7FCA248EC1FC0A616E0A56C143FA27F123F
001F147FA26C6C13FF3907E001DF0003149F3801F0033900FC0F1FD93FFC13C0EB07F090
C7FC153F1680A316005D000F147E487E486C5BA24A5A4A5A49485A6C48485A001C495A26
0F807FC7FC3807FFFC000113F038003FC0233A7DB72A>I<121C127FEAFF80A5EA7F0012
1CC7FCB2121C127FEAFF80A5EA7F00121C092479A317>I<121C127FEAFF80A5EA7F0012
1CC7FCB2121C127F5A1380A4127F121D1201A412031300A25A1206A2120E5A121812385A
1260093479A317>I<EB3FE03801FFFE3907C03F80390E000FC0003CEB07F00030130300
7014F8007C130100FE14FC7EA4127E003CEB03F8C7FCEC07F0A2EC0FE0EC1F80EC3F0014
7E147C5C495A5C495A5CA249C7FCA31306AA90C8FCA8130EEB3F80497EA56D5A010EC7FC
1E3B7CBA27>63 D<EC03FF021F13E09138FC00FCD901E0131ED90780EB0780011EC7EA01
E00138EC00704981498148488148488190C97E48D901FC1480000ED907FFEB01C0000C90
391F03C000001C90267E00E013E000184901701360263801F86D13700030496D13300103
EC0FE0267007E00107133800601718495AA200E0171C484848150CAA6C6C7E1260A26D6C
151C00701718263003F0130F0101141F00386D013F1338261800FC01771330001C017E90
38E3F070000C90261F03C113E0000E903A07FF00FFC06CD901FCEB3F006C90CAFC7F6C7E
6C7E13706D167C011EED03FCD90780EC1FF0D901E0ECFF80D900FC90383FFC00021FB512
80020301E0C7FC363C7BBA41>I<1538A3157CA315FEA34A7EA34A6C7EA202077FEC063F
A2020E7FEC0C1FA2021C7FEC180FA202387FEC3007A202707FEC6003A202C07F1501A2D9
01807F81A249C77F167FA20106810107B6FCA24981010CC7121FA2496E7EA3496E7EA349
6E7EA213E0707E1201486C81D80FFC02071380B56C90B512FEA3373C7DBB3E>I<B712E0
16FC16FF0001903980007FC06C90C7EA1FE0707E707E707EA2707EA283A75F16035F4C5A
4C5A4C5A4C5AEEFF8091B500FCC7FCA291C7EA7F80EE1FE0EE07F0707E707E83707EA218
80177F18C0A7188017FFA24C13005F16034C5AEE1FF8486DEB7FF0B812C094C7FC16F832
397DB83B>I<913A01FF800180020FEBE003027F13F8903A01FF807E07903A03FC000F0F
D90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01FE153F12014848151F4848150FA2
48481507A2485A1703123F5B007F1601A35B00FF93C7FCAD127F6DED0180A3123F7F001F
160318006C7E5F6C7E17066C6C150E6C6C5D00001618017F15386D6C5CD91FE05C6D6CEB
03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC020F13F002011380313D7BBA3C>
I<B712C016F816FE000190398001FF806C90C7EA3FE0EE0FF0EE03F8707E707E177FA2EF
3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4EF0FF0A218E0A2171F18C0EF3F
80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8C7FC16F816C036397DB83F>I<
B812FCA30001903880000F6C90C71201EE007E173E171E170EA31706A317078316C0A394
C7FCA31501A21503150F91B5FCA3EC000F15031501A21500A21860A318E093C712C0A417
01A3EF0380A21707A2170F173F177F486D903807FF00B9FCA333397DB839>I<B812F8A3
0001903880001F6C90C71201EE00FC177C173C171CA2170CA4170E1706A2ED0180A21700
A41503A21507151F91B5FCA3EC001F15071503A21501A692C8FCAD4813C0B612C0A32F39
7DB836>I<DBFF8013C0020FEBF001023F13FC9139FF803F03903A03FC000787D90FF0EB
03CF4948EB00EF4948147F4948143F49C8121F485A4848150F48481507A248481503A248
5A1701123F5B007F1600A448481600AB93B6FCA26C7E9338007FE0EF3FC0A2123F7F121F
A26C7EA26C7EA26C7E6C7E6C6C157F6D7E6D6C14FF6D6C14EFD90FF8EB03C7D903FEEB07
83903A00FFC03F0191393FFFFC00020F01F0130002001380383D7CBA41>I<B648B512FE
A30001902680000313006C90C76C5AB3A491B6FCA391C71201B3A6486D497EB648B512FE
A337397DB83E>I<B612C0A3C6EBC0006D5AB3B3AD497EB612C0A31A397EB81E>I<B612E0
A3000101C0C8FC6C90C9FCB3AD1718A517381730A31770A317F0A216011603160FEE1FE0
486D13FFB8FCA32D397DB834>76 D<B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8
A2D9CFE01533A3D9C7F01563A3D9C3F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F14
06A36E6C130CA36E6C1318A26E6C1330A36E6C1360A26E6C13C0A3913901FC0180A39139
00FE0300A2ED7F06A3ED3F8CA2ED1FD8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500
C00203B512F8A2ED018045397DB84C>I<B5913807FFFE8080C69238007FE06EEC1F80D9
DFF0EC0F001706EBCFF8EBC7FCA2EBC3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E
8114036E7E168080ED7FC016E0153FED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2
EE7FC6EE3FE6A2EE1FF6EE0FFEA216071603A216011600A2177E486C153E487ED80FFC15
1EB500C0140EA2170637397DB83E>I<EC03FF021F13E09138FE01FC903901F8007ED907
E0EB1F8049486D7ED93F80EB07F049C76C7E01FE6E7E48486E7E49157E0003167F4848ED
3F80A24848ED1FC0A2001F17E049150F003F17F0A3007F17F8491507A300FF17FCAC007F
17F86D150FA3003F17F0A26C6CED1FE0A36C6CED3FC0000717806D157F000317006C6C15
FEA26C6C4A5A017F4A5A6D6C495A6D6C495AD907E0EB1F80D903F8017FC7FC903900FE01
FC91381FFFE0020390C8FC363D7BBA41>I<B712C016F816FE000190398001FF806C90C7
EA3FC0EE0FE0EE07F0EE03F817FC17FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0F
E0EE3FC0923801FF0091B512FC16F091C9FCB3A5487FB6FCA330397DB839>I<B612FEED
FFE016F8000190388007FE6C90C76C7EEE3FC0707E707E707EA2707EA283A65FA24C5AA2
4C5A4C5AEE3F8004FFC8FCED07FC91B512E05E9138000FF0ED03F8ED00FE82707E707EA2
161F83A583A6F00180A217F8160F1803486D01071400B66D6C5A04011306933800FE0ECA
EA3FFCEF07F0393B7DB83D>82 D<D90FF813C090383FFE0190B512813903F807E33907E0
00F74848137F4848133F48C7121F003E140F007E1407A2007C140312FC1501A36C1400A3
7E6D14006C7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14FEC680013F1480010714
C0EB007F020713E0EC007FED3FF0151F150FED07F8A200C01403A21501A37EA216F07E15
036C15E06C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F13
E0D8C00190C7FC253D7CBA2E>I<003FB812E0A3D9C003EB001F273E0001FE130348EE01
F00078160000701770A300601730A400E01738481718A4C71600B3B0913807FF80011FB6
12E0A335397DB83C>I<B6903807FFFEA3000101809038007FE06C90C8EA1F80EF0F0017
06B3B2170E6D150C80171C133F17186D6C14385F6D6C14F06D6C5C6D6C495A6D6CEB0780
6D6C49C7FC91387F807E91381FFFF8020713E09138007F80373B7DB83E>I<B500FC9138
7FFF80A30003018091380FFC006C90C8EA07E0715A6C705A6E1403017F93C7FCA280013F
1506A26E140E011F150C80010F5DA28001075DA26E147001031560A26D6C5CA2806D4A5A
A2ED8003027F91C8FCA291383FC006A215E0021F5BA2EDF01C020F1318A26E6C5AA215FC
02035BA2EDFEE002015BA26E6C5AA36FC9FCA3153EA2151CA3393B7EB83E>I<B5D8FC07
B5D8F001B5FCA30007902780001FFEC7EA1FF86C48C7D80FF8EC07E000010307ED03C01B
807F6C6F6C1500A26E5F017F6E6C1406A280013F4A6C5CA280011F4A6D5BEE067FA26D6C
010E6D5BEE0C3FA26D6C011C6D5BEE181FA26D6C6F5BEE300FA26D6C6F485AEE6007A26D
6C4CC7FC9338C003FCA203805D913B7F818001FE06A203C1150EDA3FC3C7EAFF0CA203E3
151CDA1FE6EC7F98A215F6DA0FFCEC3FF0A302075E4B141FA202035E4B140FA202015E4B
1407A2020093C8FC4B80503B7EB855>I<003FB7FCA39039FC0001FE01C0130349495A00
3EC7FC003C4A5A5E0038141F00784A5A12704B5A5E006014FF4A90C7FCA24A5A5DC71207
4A5AA24A5A5D143F4A5AA24A5A92C8FC5B495AA2495A5C130F4948EB0180A2495A5C137F
495A16034890C7FC5B1203485AEE0700485A495C001F5D48485C5E4848495A49130FB8FC
A329397BB833>90 D<EAFFF8A4EAF000B3B3B3B3A3EAFFF8A40D5378BD17>I<39018001
80000313033907000700000E130E485B0018131800381338003013300070137000601360
A200E013E0485BA400CE13CE39FF80FF806D13C0A3007F137FA2393F803F80390E000E00
1A1974B92A>I<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17>I<EB1FE0EBFFFC38
03E03F3907000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FF
EB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA31401A26C13036CEB07
7C903980063E18383FC01E3A0FE0781FF03A03FFF00FE03A007F8007C026277DA52A>97
D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F3801F809039F7000FC001
FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA167E16FEA216FC15016D14
F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E903800FFF8C7EA1FC028
3B7EB92E>I<EB03FC90381FFF8090387E03E03901F80070484813F83907E001FC380FC0
03A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E127FA26C14067F001F14
0E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C090381FFF00EB07F81F277D
A525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F9038F801EF3903F0
007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA127E127FA27EA26C6C
131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F90381FFE0FD907F813
C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903F001F0D807E013F8380F
C0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA5127EA2127FA26C14
037F001F14076C6C13060007140E6D131CD801F013386C6C137090387E03E090381FFF80
903803FC0020277EA525>I<147E903803FF8090380FC1E0EB1F8790383F0FF0137EA213
FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8A31C3B7FBA19>I<
ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE03903E007C03A07C003E0
10000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A6D48C7FC38073FFC38
060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF804815C03A0F80007FE048
C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03E0003F1407D80F80EB
0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A>I<EA03F012FFA3
120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0EBF70013FE496D7EA25B
A35BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA0380EA0FE0487EA56C5AEA0380
C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>I<EB01C0EB07F0EB0F
F8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301B3B3A2123C127E00FF13F01303A2
14E038FE07C0127C383C0F00EA0FFEEA03F8154984B719>I<EA03F012FFA3120F1203B1
913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7FC141E1438147814FC13F1EB
F3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E811400157E157F811680ED1FC0486C
EB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3120F1203B3B3AD487EB512C0A312
3A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F01E07E903BF1C01F8380
3F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB0FC0A2495CA3495CB3A348
6C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F00FF000FFEB3FFCECF03F90
39F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3A3486C497EB500C1B51280
A329257EA42E>I<EB03FE90380FFF8090383E03E09038F800F84848137C48487F48487F
4848EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15F8A9007E15F0A2007F14
076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC66C13F890387E03F090
381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000FFEB7FF89038F1E07E9039F3801F
803A0FF7000FC0D803FEEB07E049EB03F04914F849130116FC150016FEA3167FAA16FEA3
ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F009038F1E07E9038F0FF
F8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D903F813C090381FFE0190387E0781
9038FC01C33903F000E3000714774848133749133F001F141F485A150F48C7FCA312FEAA
127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF3901F801CF39007E078F90381FFE
0FEB07F890C7FCABED1FE00203B5FCA328357DA42C>I<3807E01F00FFEB7FC09038E1E3
E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300A45BB3A2487EB512
F0A31C257EA421>I<EBFF03000313E7380F80FF381E003F487F487F00707F12F0A2807E
A27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380EB007F141F00C0EB
0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1FFF038C03F801A27
7DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6FCA2D801F8C7FCB215
C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>I<D803F0EB07E0
00FFEB01FFA3000FEB001F00031407B3A4150FA3151F12016D133F0000EC77F86D9038E7
FF8090383F03C790381FFF87903A03FC07E00029267EA42E>I<B538803FFEA33A0FF800
0FF06C48EB07E00003EC03C06D148000011500A26C6C1306A26D130E017E130CA26D5BA2
EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D901FBC7FCA214FF6D5AA214
7CA31438A227257EA32C>I<B53A1FFFE03FFEA3260FF8009038000FF86C48017EEB03E0
18C00003023EEB0180A26C6C013FEB0300A36C6CEC8006156FA2017E9038EFC00C15C7A2
D93F016D5A15830281EBF038D91F831430150102C3EBF87090260FC6001360A2D907E66D
5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7FA20100141E4A130E0260130C37
257EA33C>I<B538807FFFA33A03FE003FF00001EC1F80000092C7FC017E131C6D13186D
6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A7E8114CF903801C7
E090380383F090380703F8EB0601496C7E011C137E49137F01787F496D7E486C80000FEC
3FF0D8FFFE90B51280A329247FA32C>I<B538803FFEA33A0FF8000FF06C48EB07C00003
EC03806C7E16007F00001406A2017E5BA2137F6D5BA26D6C5AA2ECC070010F1360A26D6C
5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA31438A21430A214701460A25CA2EA
7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC027357EA32C>I<003FB5
12FCA2EB8003D83E0013F8003CEB07F00038EB0FE012300070EB1FC0EC3F800060137F15
0014FE495AA2C6485A495AA2495A495A495AA290387F000613FEA2485A485A0007140E5B
4848130C4848131CA24848133C48C7127C48EB03FC90B5FCA21F247EA325>I<001C131C
007F137F39FF80FF80A5397F007F00001C131C190978B72A>127
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmbx12 14.4 25
/Fn 25 121 df<B712F0AB240B7F9F2D>45 D<171F4D7E4D7EA24D7EA34C7FA24C7FA34C
7FA34C7FA24C7FA34C8083047F80167E8304FE804C7E03018116F8830303814C7E030781
16E083030F814C7E031F81168083033F8293C77E4B82157E8403FE824B800201835D8402
03834B800207835D844AB87EA24A83A3DA3F80C88092C97E4A84A2027E8202FE844A8201
0185A24A820103854A82010785A24A82010F855C011F717FEBFFFCB600F8020FB712E0A5
5B547BD366>65 D<BC1280A5D8000701F8C7000114C0F0001F19071901851A7F1A3F1A1F
A2F20FE0A21A07A31A03A318F81BF01A01A497C7FC1701A317031707170F177F92B6FCA5
9238F8007F170F170717031701A317001B3EA31B7CA395C8FCA21BFCA21BF8A21A01A31A
031BF01A071A0FA21A1F1A3FF27FE0F101FF1907191F0603B5FCBCFCA21BC0A34F517CD0
58>69 D<932601FFFCEC01C0047FD9FFC013030307B600F81307033F03FE131F92B8EA80
3F0203DAE003EBC07F020F01FCC7383FF0FF023F01E0EC0FF94A01800203B5FC494848C9
FC4901F8824949824949824949824949824990CA7E494883A2484983485B1B7F485B481A
3FA24849181FA3485B1B0FA25AA298C8FC5CA2B5FCAE6C057FB712E0A280A36C94C7003F
EBC000A36C7FA36C7FA27E6C7FA26C7F6C7FA26D7E6D7F6D7F6D6D5E6D7F6D01FC93B5FC
6D13FF6D6C6D5C6E01F0EC07FB020F01FEEC1FF10203903AFFF001FFE0020091B6EAC07F
033FEE001F030703FC1307DB007F02E01301040149CAFC5B5479D26A>71
D<B8D8C003B8FCA5D8000701F8C9001FEBE000B3AE92BAFCA503F8C9121FB3B1B8D8C003
B8FCA560527CD169>I<B812F8A5D8000701F8CAFCB3B3A91A7CA41AFC1AF8A51901A319
03A219071AF0190FA2191F193F197F19FF180360183F4DB5FCBB12E0A546527CD151>76
D<93380FFFC00303B6FC031F15E092B712FC0203D9FC0013FF020F01C0010F13C0023F90
C7000313F0DA7FFC02007F494848ED7FFE4901E0ED1FFF49496F7F49496F7F4990C96C7F
49854948707F4948707FA24849717E48864A83481B804A83481BC0A2481BE04A83A2481B
F0A348497113F8A5B51AFCAF6C1BF86E5FA46C1BF0A26E5F6C1BE0A36C6D4D13C0A26C6D
4D1380A26C1B006C6D4D5A6E5E6C626D6C4C5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D4B5B6D
6D4B90C7FC6D6D4B5A6D01FF02035B023F01E0011F13F0020F01FC90B512C0020390B7C8
FC020016FC031F15E0030392C9FCDB001F13E0565479D265>79 D<BAFC19F819FF1AE086
D8000701F0C7001F13FC060113FF726C13807313C0070F13E01BF0857313F81BFCA27313
FEA41BFFA81BFEA31BFC61A21BF84F13F04F13E0614F13C04F13004E485A061F5B92B812
F01AC04FC7FC19E003F8CBFCB3AEB812C0A550527CD15C>I<003FBC1280A59126C0003F
9038C0007F49C71607D87FF8060113C001E08449197F49193F90C8171FA2007E1A0FA300
7C1A07A500FC1BE0481A03A6C994C7FCB3B3AC91B912F0A553517BD05E>84
D<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F2703FE000113F0486C6D7F6EEB3FFC
48826E131F83707FA36C496D7FA26C90C7FC6C5AC9FCA6037FB5FC020FB6FC91B7FC0107
1487013FEBF0074913803901FFFC004813F0485B485B485B4890C7FC5A5BA2485AA45EA2
6D5C007F151D163D6C6C02797F6C6D01F113F86C9026C003E1EBFFE06C9026F81FC014F0
6C90B5487EC6ED001F011F01FC010713E0010101E090C8FC3C387CB641>97
D<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE903A1FFE0001FFD97FFC
491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC486F1300705A4892C8FC5B
A312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6CEE1F806C6DEC3F006C6D
147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A01001580023F49C7FC020113E0
33387CB63C>99 D<4DB47E0407B5FCA5EE001F1707B3A4913801FFE0021F13FC91B6FC01
0315C7010F9038E03FE74990380007F7D97FFC0101B5FC49487F4849143F484980485B83
485B5A91C8FC5AA3485AA412FFAC127FA36C7EA37EA26C7F5F6C6D5C7E6C6D5C6C6D49B5
FC6D6C4914E0D93FFED90FEFEBFF80903A0FFFC07FCF6D90B5128F0101ECFE0FD9003F13
F8020301C049C7FC41547CD24B>I<913803FFC0023F13FC49B6FC010715C04901817F90
3A3FFC007FF849486D7E49486D7E4849130F48496D7E48178048497F18C0488191C7FC48
17E0A248815B18F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218E06CEE01F06E14
037E6C6DEC07E0A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91FFEEB03FE903A0F
FFC03FF8010390B55A010015C0021F49C7FC020113F034387CB63D>I<DA3FFF14FF0103
B5D8F00713C0010FDAFC1F13E0013FECFF7F90267FFC0F9038FF9FF09026FFE001EBF83F
48496C13E0484990387FF01F4890C7D83FF813E0489338FC0FC0F0078048486E6CC7FCA2
003F82A9001F5EA26C6C4A5AA26C5E6C6D495A6C6D495A6C6D485BDAFC0F5B4890B6C8FC
D803EF14FC01C314F02607C03F90C9FC91CBFCA2120FA37FA213F813FE90B7FC6C16F817
FF18C06C836C836C836D828448B9FC12074848C700031480D81FF8EC003F484815074848
6F13C083485A83A56D5D007F18806D5D003F18006C6C4B5AD80FFEED1FFC6C6C6CEC7FF8
6C01E049485A6C01FE011F5B6C6CB71280010F03FCC7FC010115E0D9000F01FCC8FC3C4F
7CB543>103 D<EB3FF0B5FCA51203C6FCB3A4EE1FFC93B512C0030314F0030F8092391F
E07FFC92393F001FFE037C8003F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45C
B3ACB6D8F807B612C0A542537BD24B>I<137F497E000313E0487FA2487FA76C5BA26C5B
C613806DC7FC90C8FCADEB3FF0B5FCA512017EB3B3A6B612E0A51B547BD325>I<D93FF0
D91FFCEDFFE0B591B500C0010713FE030302F0011F6D7E030F6E017F8092271FE07FFCD9
FF037F922A3F001FFE01F8007F0003027C9126FF03E080C602F06DD90780137FDAF1E003
8FC77FDAF3C0159EDAF7806D01BC143F07FC8102FFC75C4A5EA24A5EA44A5EB3ACB6D8F8
07B6D8C03FB512FEA567367BB570>109 D<D93FF0EB1FFCB591B512C0030314F0030F80
92391FE07FFC92393F001FFE0003027C80C602F07FDAF1E081ECF3C0DAF7807F8502FFC7
FC5CA25CA45CB3ACB6D8F807B612C0A542367BB54B>I<913801FFE0021F13FE91B612C0
010315F0010F9038807FFC903A1FFC000FFED97FF86D6C7E49486D7F48496D7F48496D7F
4A147F48834890C86C7EA24883A248486F7EA3007F1880A400FF18C0AC007F1880A3003F
18006D5DA26C5FA26C5F6E147F6C5F6C6D4A5A6C6D495B6C6D495B6D6C495BD93FFE011F
90C7FC903A0FFF807FFC6D90B55A010015C0023F91C8FC020113E03A387CB643>I<9039
7FE003FEB590380FFF80033F13E04B13F09238FE1FF89139E1F83FFC0003D9E3E013FEC6
ECC07FECE78014EF150014EE02FEEB3FFC5CEE1FF8EE0FF04A90C7FCA55CB3AAB612FCA5
2F367CB537>114 D<903903FFF00F013FEBFE1F90B7FC120348EB003FD80FF81307D81F
E0130148487F4980127F90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C13FF15F86C
14FF16C06C15F06C816C816C81C681013F1580010F15C01300020714E0EC003F030713F0
15010078EC007F00F8153F161F7E160FA27E17E07E6D141F17C07F6DEC3F8001F8EC7F00
01FEEB01FE9039FFC00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C387CB635>
I<143EA6147EA414FEA21301A313031307A2130F131F133F13FF5A000F90B6FCB8FCA426
003FFEC8FCB3A9EE07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC6DEBFFF8
6D6C5B021F5B020313802A4D7ECB34>I<D93FF8913801FFC0B50207B5FCA50003ED001F
C61607B3AE5FA35FA2017F5D173B177B6D6C14F3DC01E313F06D6CD907C3EBFFC0903A0F
FFC03F836D90B51203010114FE6D6C13F8020701E091C7FC42377BB54B>I<B6D8E07FB5
D8C003B512C0A5000101F0C701F0C7381FF8006E027FED07E06C715DA26E023F150F017F
705DA26E181F013F4B6C92C7FC6E606D70143E94B5FC6F177E6D4A6E137C03C001F315FC
6D715B160303E001E114016D020702E05B03F013C06D71485A160F03F8D9807F13076D05
F85B93381F003F03FC160F027F4902FC5BDBFE3E011F131F023F04FE90C8FC167EDBFF7C
010F5B6E01FCECFF3E4C6D137E6E5FA24C7F6E5F4C7F6E5FA24C7F6E5F4C147FA26E5F93
C8123F6F5EA2033E6FC9FC5A367DB461>119 D<007FB500F090387FFFFEA5C66C48C700
0F90C7FC6D6CEC07F86D6D5C6D6D495A6D4B5A6F495A6D6D91C8FC6D6D137E6D6D5B9138
7FFE014C5A6E6C485A6EEB8FE06EEBCFC06EEBFF806E91C9FCA26E5B6E5B6F7E6F7EA26F
7F834B7F4B7F92B5FCDA01FD7F03F87F4A486C7E4A486C7E020F7FDA1FC0804A486C7F4A
486C7F02FE6D7F4A6D7F495A49486D7F01076F7E49486E7E49486E7FEBFFF0B500FE49B6
12C0A542357EB447>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 537 448 a Fn(Extending)45 b(the)h(TPTP)d(Language)j(to)f
(Higher-Order)740 598 y(Logic)g(with)h(Automated)f(P)l(arser)h
(Generation)1261 886 y Fm(Allen)28 b(V)-7 b(an)27 b(Gelder)1891
856 y Fl(1)1956 886 y Fm(and)g(Geo\013)h(Sutcli\013e)2629
856 y Fl(2)610 1029 y Fk(1)683 1060 y Fj(Univ)n(ersit)n(y)d(of)h
(California)i(at)e(San)n(ta)g(Cruz,)g(USA,)f Fi
(http://www.cse.ucsc.edu/~avg)1112 1120 y Fk(2)1185 1152
y Fj(Univ)n(ersit)n(y)g(of)h(Miami,)h(USA,)e Fi(geoff@cs.miami.edu)759
1479 y Fh(Abstract.)43 b Fj(A)19 b(stable)h(prop)r(osal)h(for)g
(extending)e(the)g(\014rst-order)h(TPTP)h(\(Thou-)759
1571 y(sands)26 b(of)h(Problems)e(for)i(Theorem)e(Pro)n(v)n(ers\))h
(language)h(to)f(higher-order)g(logic,)759 1662 y(based)j(primarily)g
(on)g(lam)n(b)r(da-calculus)g(expressions,)h(is)g(presen)n(ted.)e(The)i
(pur-)759 1753 y(p)r(ose)22 b(of)f(the)g(system)f(is)h(to)g(facilitate)
i(sharing)e(of)h(theorem-pro)n(ving)d(problems)i(in)759
1845 y(higher-order)29 b(logic)h(among)e(man)n(y)f(researc)n(hers.)j
(Design)f(goals)i(are)e(discussed.)759 1936 y(BNF2,)37
b(a)f(new)g(sp)r(eci\014cation)h(language,)g(is)f(presen)n(ted.)g
(Unix/Lin)n(ux)e(scripts)759 2027 y(translate)26 b(the)f(sp)r
(eci\014cation)h(do)r(cumen)n(t)d(in)n(to)i(a)h Fg(lex)34
b Fj(scanner)25 b(and)g Fg(yac)l(c)30 b Fj(parser.)523
2304 y Ff(1)112 b(In)m(tro)s(duction)523 2468 y Fm(The)31
b(goal)f(of)g(this)i(w)n(ork)d(is)i(to)g(extend)g(the)g(curren)n(t)f
(TPTP)g(\(Thousands)h(of)f(Problems)523 2567 y(for)d(Theorem)f(Pro)n(v)
n(ers\))f(language)h([SZS04)o(])h(to)h(include)f(adequate)g(supp)r(ort)
g(for)g(higher-)523 2667 y(order)36 b(logic,)g(while)h(con)n(tin)n
(uing)f(to)h(recognize)e(the)j(existing)e(\014rst-order)f(language.)h
(It)523 2766 y(w)n(as)31 b(motiv)-5 b(ated)32 b(b)n(y)g(a)f(panel)h
(discussion)f(at)h(the)h(W)-7 b(orkshop)30 b(on)i(Exp)r(erimen)n(tally)
f(Suc-)523 2866 y(cessful)k(Automated)h(Reasoning)e(in)h(Higher-Order)e
(Logic)h(held)i(in)f(conjunction)g(with)523 2966 y(LP)-7
b(AR-12,)30 b(Decem)n(b)r(er)i(2005.)e(The)i(panel)f(discussion)g(con)n
(v)n(ey)n(ed)f(the)i(desire)f(to)h(ha)n(v)n(e)e(a)523
3065 y(common)g(language)g(in)h(whic)n(h)g(v)-5 b(arious)29
b(researc)n(hers)f(could)j(express)f(b)r(enc)n(hmark)g(prob-)523
3165 y(lems)24 b(in)f(higher-order)e(logics)i(that)g(w)n(ould)g(b)r(e)h
(con)n(tributed)g(to)f(a)g(common)g(library)f(along)523
3265 y(the)28 b(lines)g(of)f(the)h(TPTP)f(problem)g(library)f([SS98)o
(].)648 3364 y(The)h(new)h(language)e(dev)n(elop)r(ed)h(in)h(this)g
(pro)5 b(ject)27 b(is)g(ten)n(tativ)n(ely)g(named)h(HOTPTP)-7
b(.)523 3464 y(Some)27 b(of)h(the)g(design)f(goals)f(w)n(ere)558
3584 y(1.)41 b(The)26 b(rules)f(of)g(the)h(language)e(should)h(b)r(e)h
(simple)g(and)f(regular,)f(so)h(that)g(h)n(umans)g(can)664
3683 y(understand)i(them)i(without)f(to)r(o)f(m)n(uc)n(h)g(trouble.)558
3791 y(2.)41 b(The)32 b(rules)f(of)h(the)g(language)e(should)h(b)r(e)h
(presen)n(ted)f(in)h(a)f(sp)r(eci\014cation)h(do)r(cumen)n(t)664
3891 y(that)41 b(has)g(su\016cien)n(t)g(formalit)n(y)f(and)g(rigor)f
(to)i(b)r(e)g(unam)n(biguous,)f(y)n(et)h(is)g(not)g(so)664
3991 y(tec)n(hnical)27 b(and)h(complicated)f(that)h(its)g(meaning)f(is)
g(obscured.)558 4099 y(3.)41 b(The)26 b(language)e(should)h(b)r(e)h
(amenable)f(to)g Fe(str)l(aightforwar)l(d)37 b Fm(automated)25
b(parser)f(gen-)664 4198 y(eration,)f(with)i(established)e(to)r(ols)h
(suc)n(h)f(as)h Fe(lex)33 b Fm(and)24 b Fe(yac)l(c)p
Fm(,)h(or)e Fe(\015ex)34 b Fm(and)24 b Fe(bison)p Fm(.)g(These)664
4298 y(to)r(ols)36 b(accept)f(LALR-1)h(languages.)e(It)i(w)n(ould)g(b)r
(e)g(undesirable)f(to)h(rely)f(on)h(tric)n(ks)664 4397
y(and)28 b(extensions)e(that)i(migh)n(t)g(b)r(e)g(supp)r(orted)f(in)h
(one)f(to)r(ol)h(and)f(not)h(another.)558 4505 y(4.)41
b(It)22 b(should)g(b)r(e)h(straigh)n(tforw)n(ard)c(to)i(set)h(up)h(a)e
(Prolog)f(parser)g(for)i(the)g(language,)e(using)664
4605 y(Prolog's)25 b Fd(read\(\))g Fm(pro)r(cedure)i(to)h(accomplish)e
(most)i(of)f(the)h(parsing)f(drudgery)-7 b(.)523 4725
y(The)21 b(rules)e(of)i(the)g(TPTP)e(language,)g(as)h(released)f(with)i
(TPTP)e(v3.0.0,)g(already)g(ac)n(hiev)n(ed)523 4825 y(goals)36
b(\(1\),)j(\(2\),)f(and)g(\(4\))g(ab)r(o)n(v)n(e)f(quite)h(w)n(ell.)g
(The)g(\014rst)f(step)i(of)e(the)i(pro)5 b(ject)37 b(w)n(as)g(to)523
4924 y(ac)n(hiev)n(e)f(goal)f(\(3\).)i(During)g(this)g(initial)g
(phase,)f(a)h(few)g(am)n(biguities)f(w)n(ere)g(disco)n(v)n(ered)p
eop
%%Page: 2 2
2 1 bop 523 448 a Fm(in)30 b(the)h(existing)f(language,)e(and)i(minor)g
(revisions)f(of)h(the)h(rules)e(w)n(ere)g(implemen)n(ted)i(to)523
548 y(remo)n(v)n(e)d(these)i(am)n(biguities)f(without)h(c)n(hanging)f
(the)h(underlying)f(language.)f(F)-7 b(ollo)n(wing)523
648 y(that)39 b(w)n(ork,)e(the)i(task)g(of)f(extending)h(the)g
(language)e(to)i(accommo)r(date)e(higher)h(order)523
747 y(constructs)27 b(b)r(egan.)648 847 y(Brie\015y)-7
b(,)27 b(the)h(con)n(tributions)e(arising)h(from)g(this)h(pro)5
b(ject)27 b(are:)558 955 y(1.)41 b(The)36 b(dev)n(elopmen)n(t)g(of)g
(BNF2,)g(a)g(new)h(v)-5 b(arian)n(t)35 b(of)h(Bac)n(kus-Naur)e(form.)i
(BNF2)g(is)664 1055 y(orien)n(ted)e(to)n(w)n(ard)g(the)h(mo)r(dern)g
(practice)f(of)h(t)n(w)n(o-lev)n(el)e(syn)n(tax)h(for)g(programming)664
1154 y(languages)26 b(and)h(is)h(easy)e(for)h(h)n(umans)h(to)f(read.)
558 1262 y(2.)41 b(Unix/Lin)n(ux)27 b(scripts)g(to)h(translate)e(BNF2)i
(in)n(to)f(input)i(readable)d(b)n(y)h Fe(lex)38 b Fm(and)27
b Fe(yac)l(c)p Fm(.)558 1370 y(3.)41 b(Stable)29 b(BNF2)g(rules)f(that)
h(extend)g(the)g(TPTP)f(language)f(and)h(accept)h(a)f(v)-5
b(ariet)n(y)28 b(of)664 1470 y(higher-order)d(logic)i(expressions)f(in)
i(a)f(h)n(uman-readable)f(language.)523 1578 y(Soft)n(w)n(are)g(and)i
(do)r(cumen)n(ts)f(are)g(at)g Fd(http://www.cse.uc)o(sc)o(.ed)o(u/)o
(~av)o(g/)o(TPT)o(Pp)o(ar)o(ser)o Fm(.)523 1778 y Ff(2)112
b(Sp)s(eci\014cations)37 b(with)f(BNF2)523 1936 y Fm(The)31
b(TPTP)e(language)g(w)n(as)g(sp)r(eci\014ed)i(in)g(TPTP)e(v3.0.0)g
(using)h(the)h(original)e(standard)523 2035 y(Bac)n(kus-Naur)h(form)h
(\(BNF\))i([Ne60],)f(with)g(informal)g(explanations)f(to)h(get)f(o)n(v)
n(er)g(some)523 2135 y(rough)36 b(sp)r(ots.)g(In)h(this)h(simple)f(and)
f(easy-to-read)e(format,)j(whic)n(h)g(is)f(found)h(in)h(man)n(y)523
2234 y(programming-language)31 b(texts,)k(grammar)e(sym)n(b)r(ols)h
(are)h(enclosed)f(in)h Fc(<)g(>)p Fm(,)g(and)g(the)523
2334 y(only)k(meta-sym)n(b)r(ols)g(are)f(the)i(pro)r(duction)g(sym)n(b)
r(ol)f(\\)p Fd(::=)p Fm(",)e(the)j(alternativ)n(e)e(sym)n(b)r(ol)523
2434 y(\\)p Fd(|)p Fm(",)f(and)h(the)h(rep)r(etition)g(sym)n(b)r(ol)f
(\\)p Fd(*)p Fm(";)f(an)n(y)g(other)h(c)n(haracter)f(sequence)h(stands)
g(for)523 2533 y(itself,)29 b(and)g(is)g(called)f(a)h
Fe(self-de)l(clar)l(e)l(d)j(token)p Fm(.)d(More)f(sophisticated)g(v)-5
b(arian)n(ts)28 b(ha)n(v)n(e)g(b)r(een)523 2633 y(prop)r(osed)f(o)n(v)n
(er)e(the)j(y)n(ears;)e(see)i(Section)f(5.)648 2733 y(While)k(trying)f
(to)g(write)g(scripts)g(to)h(translate)e(BNF)i(in)n(to)f(inputs)h(for)f
Fe(lex)41 b Fm(and)30 b Fe(yac)l(c)523 2832 y Fm(it)37
b(w)n(as)e(realized)g(that)i(standard)e(BNF)h(is)g(ill-suited)h(for)e
(sp)r(ecifying)i Fe(tokens)p Fm(.)f(That)g(is,)523 2932
y(the)24 b(mo)r(dern)g(t)n(w)n(o-lev)n(el)e(st)n(yle)i(of)g
(programming-language)19 b(sp)r(eci\014cation)24 b(de\014nes)g
Fe(tokens)523 3031 y Fm(using)k(regular)g(expressions,)f(and)h
(de\014nes)h Fe(gr)l(ammar)j(symb)l(ols)k Fm(using)28
b(con)n(text-free)g(pro-)523 3131 y(duction)38 b(rules.)g(A)h(lexical)e
(analyzer)g(parses)g(the)i(ra)n(w)e(input)i(in)n(to)f(tok)n(ens,)f
(while)i(the)523 3231 y(pro)r(duction)c(rules)g(treat)g(tok)n(ens)f(as)
h(terminal)g(sym)n(b)r(ols.)f(This)i(distinction)f(is)h(blurred)523
3330 y(in)k(standard)f(BNF.)h(Another)f(asp)r(ect)h(of)f(the)h(TPTP)f
(language)f(that)i(w)n(as)f(observ)n(ed)523 3430 y(w)n(as)30
b(that)h(some)f(pro)r(duction)h(rules)f(w)n(en)n(t)h(b)r(ey)n(ond)f(sp)
r(ecifying)h(the)g Fe(form)38 b Fm(of)31 b(the)g(input,)523
3530 y(and)h(sp)r(eci\014ed)g(a)g(list)g(of)g(acceptable)g(w)n(ords.)e
(This)i(presen)n(ted)g(a)g(con\015ict)g(in)g(that)g(suc)n(h)523
3629 y(w)n(ords)f(b)r(ecame)h(self-declared)f(tok)n(ens.)h(Without)h
(making)f(a)g(con)n(text-sensitiv)n(e)f(lexical)523 3729
y(analyzer,)26 b(suc)n(h)h(w)n(ords)g(b)r(ecame)g(una)n(v)-5
b(ailable)27 b(for)g(user)g(iden)n(ti\014ers.)648 3828
y(T)-7 b(o)24 b(o)n(v)n(ercome)f(these)i(limitations)h(of)f(standard)f
(BNF)h(w)n(e)g(designed)g(BNF2,)g(a)g(simple)523 3928
y(extension)35 b(of)g(BNF)h(that)g(preserv)n(es)d(the)j(easy-to-read)d
(format)i(for)f(pro)r(duction)i(rules)523 4028 y(and)j(adds)g
(di\013eren)n(t)g(formats)g(to)g(sp)r(ecify)h(seman)n(tic)e(rules,)h
(tok)n(ens,)g(and)g(macros)f(for)523 4127 y(tok)n(ens.)24
b Fe(Semantic)30 b Fm(pro)r(duction)25 b(rules)g(are)f(ignored)g(for)g
(purp)r(oses)h(of)g(syn)n(tactic)f(parsing,)523 4227
y(but)34 b(are)f(a)n(v)-5 b(ailable)32 b(to)h(sp)r(ecify)h(more)f
(detail)h(ab)r(out)f(the)h(seman)n(tic)f(con)n(ten)n(t)g(of)h(certain)
523 4327 y(sen)n(ten)n(tial)29 b(forms.)f(All)i(the)f(extensions)g(are)
f(implemen)n(ted)h(b)n(y)g(using)g(additional)f(meta-)523
4426 y(sym)n(b)r(ols)k(to)g(sp)r(ecify)h(v)-5 b(arious)31
b(rule)h(t)n(yp)r(es,)g(according)f(to)h(the)h(follo)n(wing)f(table.)g
(As)h(the)523 4526 y(table)21 b(sho)n(ws,)e(a)h(sym)n(b)r(ol)g(that)h
(has)f(a)g Fe(semantic)26 b Fm(rule)20 b(m)n(ust)h(also)e(ha)n(v)n(e)g
(a)h(normal)g(grammar)523 4625 y(rule)i(if)h(it)g(app)r(ears)f(on)g
(the)h(righ)n(t)f(side)h(of)f(an)n(y)g(normal)g(grammar)e(rule.)j(The)f
(string)g(\\)p Fd(<=>)p Fm(")523 4725 y(and)k(follo)n(wing)g(strings)f
(are)h(self-declared)f(tok)n(ens:)h(grammar)f(sym)n(b)r(ols)g(m)n(ust)i
(consist)f(of)523 4825 y(alphan)n(umerics.)31 b(The)i(righ)n(t)f(sides)
g(of)g(tok)n(en)g(and)g(macro)f(rules)h(are)g Fe(lex)10
b Fm(-ready)31 b(regular)523 4924 y(expressions,)26 b(except)i(that)f
(\\)p Fd(<)43 b(>)p Fm(")27 b(need)h(to)f(b)r(e)h(con)n(v)n(erted)e(to)
i(\\)p Fd({)42 b(})p Fm(".)p eop
%%Page: 3 3
3 2 bop 523 2239 a
 currentpoint currentpoint translate 0.8 0.8 scale neg exch neg exch
translate
 523 2239 a @beginspecial 71 @llx 440
@lly 431 @urx 721 @ury 3600 @rwi @setspecial
%%BeginDocument: sysfig.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: tmp__pst.dvi
%%BoundingBox: 71 440 431 721
%%DocumentFonts: Times-Italic Times-Roman
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E tmp__pst -o sysfig.eps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2006.03.03:2239
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks 97 - Version 97, 93/05/07.
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
% END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro
%!
% PostScript prologue for pst-coil.tex.
% Version 97 patch 1, 98/06/02
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { /t ED t sin AspectSin mul t 180 div AspectCos mul add t cos
lineto } def
/Coil { /Inc ED dup sin /AspectSin ED cos /AspectCos ED /ArmB ED /ArmA ED
/h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED x0 y0 translate y1 y0 sub x1 x0
sub 2 copy Pyth /TotalLength ED Atan rotate /BeginAngle ArmA AspectCos
Div w h mul Div 360 mul def /EndAngle TotalLength ArmB sub AspectCos Div
w h mul Div 360 mul def 1 0 0 0 ArrowA ArmA 0 lineto /mtrx CM def w h
mul 2 Div w 2 Div scale BeginAngle Inc EndAngle { CoilLoop } for
EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
TotalLength 0 ArrowB lineto
pop pop pop pop } def
% DG/SR modification end
/AltCoil { /Inc ED dup sin /AspectSin ED cos /AspectCos ED /h ED /w ED
/EndAngle ED /BeginAngle ED /mtrx CM def w h mul 2 Div w 2 Div scale
BeginAngle sin AspectSin mul BeginAngle 180 div AspectCos mul add
BeginAngle cos /lineto load stopped { moveto } if BeginAngle Inc
EndAngle { CoilLoop } for EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { /ArmB ED /ArmA ED 2 div /w ED w mul /h ED /y1 ED /x1 ED /y0 ED
/x0 ED x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth /TotalLength ED
Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
sub 2 div dup ArmA add /ArmA ED ArmB add /ArmB ED /x ArmB h 2 div add
def mark 0 0 ArmB 0 n { x w /w w neg def /x x h add def } repeat
TotalLength ArmA sub 0 TotalLength 0 } def
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258437 52099154 1000 600 600 (tmp__pst.dvi)
@start /Fa 134[42 42 60 1[42 23 32 28 1[42 42 42 65 23
2[23 42 42 28 37 42 37 42 37 12[51 46 2[46 60 60 1[51
2[28 60 1[46 51 60 55 55 15[42 5[21 2[28 28 37[46 2[{
TeXBase1Encoding ReEncodeFont}39 83.022 /Times-Roman
rf /Fb 136[55 37 42 1[32 3[42 42 60 3[23 42 42 1[37 42
37 1[42 14[51 5[46 3[60 3[60 22[28 45[{TeXBase1Encoding ReEncodeFont}19
83.022 /Times-Italic rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
1 0 bop 0 2325 a
 tx@Dict begin gsave CM STV CP newpath moveto 3.0 neg 0 rmoveto clip
setmatrix end
 0 2325 a 0 2325 2985 2325 v 2985 2325
a
 currentpoint grestore moveto
 2985 2325 a 511 154 a
 tx@Dict begin tx@NodeDict begin {14.5 9.5 51.7999 25.89995 2.5 } false
/N@sky 16 {InitRnode } NewNode end end
 511 154 a 609 103 a Fb(Design)561
203 y(Langua)o(g)o(e)443 552 y
 tx@Dict begin tx@NodeDict begin {16.5 11.5 68.21931 34.10965 2.5 }
false /N@root 16 {InitRnode } NewNode end end
 443 552 a 17 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.0 SLW 0  setgray  0. true 2.0 neg 11.5
neg 66.21931 16.5 .5 Frame  gsave 1.0 SLW 0  setgray 0 setlinecap stroke
 grestore end
 
@endspecial 510 501 a Fa(Speci\002cation)582
601 y(in)21 b(BNF2)726 332 y
 tx@Dict begin gsave STV newpath 1.0 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1. 4.0 1.2 Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@sky /N@root InitNC { NCLine  } if end gsave 1.0 SLW 0  setgray
0 setlinecap stroke  grestore  grestore end
 726 332 a 912 951 a
 tx@Dict begin tx@NodeDict begin {16.5 11.5 51.38976 25.69487 2.5 }
false /N@yacc 16 {InitRnode } NewNode end end
 912
951 a 16 w @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0  setgray  0. true 2.0 neg 11.5
neg 49.38976 16.5 .5 Frame  gsave 1.0 SLW 0  setgray 0 setlinecap stroke
 grestore end
 
@endspecial 979
900 a Fa(Inputs)e(to)978 1000 y(le)o(x,)h(yacc)726 332
y
 tx@Dict begin gsave STV newpath 1.0 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1. 4.0 1.2 Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@root /N@yacc InitNC { NCLine  } if end gsave 1.0 SLW 0  setgray
0 setlinecap stroke  grestore  grestore end
 726 332 a 726 332 a
 tx@Dict begin tx@NodeDict begin /t 0.95 def LPut end PutBegin  end
 726 332 a 726 332 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 44.2193 14.5
9.5 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 726 332 a 510
302 a Fa(translation)577 402 y(scripts)726 332 y
 tx@Dict begin PutEnd  end
 726
332 a 726 332 a
 tx@Dict begin PutEnd  end
 726 332 a 1304 1349 a
 tx@Dict begin tx@NodeDict begin {16.5 11.5 52.9397 26.46985 2.5 }
false /N@ccode 16 {InitRnode } NewNode end end
 1304 1349 a 16
w @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0  setgray  0. true 2.0 neg 11.5
neg 50.9397 16.5 .5 Frame  gsave 1.0 SLW 0  setgray 0 setlinecap stroke
 grestore end
 
@endspecial 1408 1298 a
Fa(Source)1370 1398 y(Code)g(\(C\))726 332 y
 tx@Dict begin gsave STV newpath 1.0 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1. 4.0 1.2 Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@yacc /N@ccode InitNC { NCLine  } if end gsave 1.0 SLW 0  setgray
0 setlinecap stroke  grestore  grestore end
 726 332
a 726 332 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 726 332 a 726 332 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 35.38976 6.81989
2.16492 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 726 332 a 580 351 a Fa(yacc,)f(le)o(x)
726 332 y
 tx@Dict begin PutEnd  end
 726 332 a 726 332 a
 tx@Dict begin PutEnd  end
 726 332 a 726 332 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1. 4.0 1.2 Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@ccode /N@root InitNC { yB yA sub xB xA sub Atan dup -100.  add
/AngleA ED -100.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if
end gsave 1.0 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 726
332 a 1672 1748 a
 tx@Dict begin tx@NodeDict begin {16.5 11.5 60.27963 30.13982 2.5 }
false /N@parser 16 {InitRnode } NewNode end end
 1672 1748 a 16 w @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0  setgray  0. true 2.0 neg 11.5
neg 58.27963 16.5 .5 Frame  gsave 1.0 SLW 0  setgray 0 setlinecap stroke
 grestore end


@endspecial 1738 1697 a Fa(Ex)o(ecutable)1819 1797 y(P)o(arser)726
332 y
 tx@Dict begin gsave STV newpath 1.0 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1. 4.0 1.2 Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@ccode /N@parser InitNC { NCLine  } if end gsave 1.0 SLW 0  setgray
0 setlinecap stroke  grestore  grestore end
 726 332 a 726 332 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 726 332 a 726 332 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 32.21956 6.81989
2.16492 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 726 332
a 593 351 a Fa(compile)726 332 y
 tx@Dict begin PutEnd  end
 726 332 a 726 332 a
 tx@Dict begin PutEnd  end

726 332 a 156 951 a
 tx@Dict begin tx@NodeDict begin {14.5 9.5 41.43994 20.71997 2.5 }
false /N@human 16 {InitRnode } NewNode end end
 156 951 a 206 900 a Fb(Human)209
1000 y(Re)o(vie)o(w)726 332 y
 tx@Dict begin gsave STV newpath 1.0 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1. 4.0 1.2 Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@root /N@human InitNC { NCLine  } if end gsave 1.0 SLW 0  setgray
0 setlinecap stroke  grestore  grestore end
 726 332 a 726 332 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1. 4.0 1.2 Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@human /N@root InitNC { yB yA sub xB xA sub Atan dup 60.  add
/AngleA ED 60.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end
gsave 1.0 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 726
332 a 726 332 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 726 332 a 726 332 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 25.94969 6.56494
0.17992 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 726 332 a 619 359
a Fb(Re)o(vise)726 332 y
 tx@Dict begin PutEnd  end
 726 332 a 726 332 a
 tx@Dict begin PutEnd  end
 726 332
a 489 1548 a
 tx@Dict begin tx@NodeDict begin {28.5 23.5 57.10933 28.55466 2.5 }
false /N@prolog 16 {InitRnode } NewNode end end
 489 1548 a 17 w @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0  setgray  0. true 2.0 neg 23.5
neg 55.10933 28.5 .5 Frame  gsave 1.0 SLW 0  setgray 0 setlinecap stroke
 grestore end


@endspecial 616 1398 a Fa(Prolog)623 1498 y(P)o(arser)653
1597 y(with)556 1697 y(Semantics)726 332 y
 tx@Dict begin gsave STV newpath 1.0 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1. 4.0 1.2 Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@root /N@prolog InitNC { NCLine  } if end gsave 1.0 SLW 0  setgray
0 setlinecap stroke  grestore  grestore end
 726 332 a
726 332 a
 tx@Dict begin tx@NodeDict begin /t 0.8 def LPut end PutBegin  end
 726 332 a 726 332 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 42.20984 6.8449
0.14496 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 726 332 a 551 360 a Fb(hand-code)726
332 y
 tx@Dict begin PutEnd  end
 726 332 a 726 332 a
 tx@Dict begin PutEnd  end
 726 332 a 726 332 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1. 4.0 1.2 Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@prolog /N@root InitNC { yB yA sub xB xA sub Atan dup 30.  add
/AngleA ED 30.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end
gsave 1.0 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 726 332
a 726 332 a
 tx@Dict begin tx@NodeDict begin /t 0.2 def LPut end PutBegin  end
 726 332 a 726 332 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 55.93944 6.68
1.40991 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 726 332 a 494 354 a Fa(Errors,)g
Fb(Re)o(vise)726 332 y
 tx@Dict begin PutEnd  end
 726 332 a 726 332 a
 tx@Dict begin PutEnd  end
 726 332 a
1272 2146 a
 tx@Dict begin tx@NodeDict begin {20.5 15.5 108.50923 54.25461 2.5
} false /N@test 16 {InitRnode } NewNode end end
 1272 2146 a 1322 2046 a Fa(T)-6 b(est)21
b(on)f(HOL)g(Examples,)1483 2145 y(TPTP)h(Library)-5
b(,)1421 2245 y(and)19 b(TSTP)i(Library)726 332 y
 tx@Dict begin gsave STV newpath 1.0 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1. 4.0 1.2 Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@parser /N@test InitNC { NCLine  } if end gsave 1.0 SLW 0  setgray
0 setlinecap stroke  grestore  grestore end
 726
332 a 726 332 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1. 4.0 1.2 Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@prolog /N@test InitNC { NCLine  } if end gsave 1.0 SLW 0  setgray
0 setlinecap stroke  grestore  grestore end
 726 332 a 2496 2146 a
 tx@Dict begin tx@NodeDict begin {16.5 11.5 53.7898 26.8949 2.5 } false
/N@done 16 {InitRnode } NewNode end end
 2496 2146 a 16
w @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0  setgray  0. true 2.0 neg 11.5
neg 51.7898 16.5 .5 Frame  gsave 1.0 SLW 0  setgray 0 setlinecap stroke
 grestore end
 
@endspecial 2604 2095 a
Fa(DONE)2562 2195 y(\(for)e(no)n(w\))726 332 y
 tx@Dict begin gsave STV newpath 1.0 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1. 4.0 1.2 Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@test /N@done InitNC { NCLine  } if end gsave 1.0 SLW 0  setgray
0 setlinecap stroke  grestore  grestore end
 726 332
a 726 332 a
 tx@Dict begin gsave STV newpath 1.0 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1. 4.0 1.2 Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@test /N@root InitNC { yB yA sub xB xA sub Atan dup -100.  add
/AngleA ED -100.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if
end gsave 1.0 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 726 332 a 726 332 a
 tx@Dict begin tx@NodeDict begin /t 0.6 def LPut end PutBegin  end
 726 332 a 726 332 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 55.93944 6.68
1.40991 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 726
332 a 494 354 a Fa(Errors,)g Fb(Re)o(vise)726 332 y
 tx@Dict begin PutEnd  end
 726
332 a 726 332 a
 tx@Dict begin PutEnd  end
 726 332 a eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 523 2239 a
 currentpoint currentpoint translate 1 0.8 div 1 0.8 div scale neg
exch neg exch translate
 523 2239 a 174 x Fh(Fig.)15 b(1.)30
b Fj(Ov)n(erview)f(of)i(the)f(system)f(ev)l(aluate)i(a)f(prop)r(osed)h
(HOTPTP)g(language.)g(Human)e(ac-)523 2504 y(tivities)d(are)h(sho)n(wn)
e(in)h Fg(italics)p Fj(.)698 2746 y Fg(Meta-)48 b(R)n(ule)677
2837 y(Symb)l(ol)31 b(T)-6 b(yp)l(e)193 b(Examples)32
b Fj(\(some)25 b(are)i(simpli\014ed)e(from)g(the)g(TPTP)i(language\))p
665 2868 2598 4 v 739 2932 a Fi(::=)85 b Fj(Grammar)23
b Fi(<TPTP)40 b(input>)119 b(::=)40 b(<annotated)h(formula>)g(|)f
(<comment>)1290 3023 y(<nonassoc)h(op>)79 b(::=)40 b(<=>)g(|)f(=>)h(|)f
(<=)h(|)g(<~>)1290 3115 y(<formula)h(role>)f(::=)g(<lower)g(word>)739
3206 y(:==)85 b Fj(Seman)n(tic)43 b Fi(<formula)e(role>)f(:==)g(axiom)g
(|)g(conjecture)h(|)f(lemma)g(|)2035 3297 y(theorem)h(|)e
(negated_conjecture)739 3389 y(::-)85 b Fj(T)-6 b(ok)n(en)146
b Fi(<lower)40 b(word>)119 b(::-)40 b(<lower><alphanum>*)739
3480 y(::=)85 b Fj(Macro)139 b Fi(<lower>)315 b(:::)40
b([a-z])1290 3571 y(<alphanum>)198 b(:::)40 b([A-Za-z0-9_])p
665 3602 V 523 3768 a Ff(3)112 b(System)37 b(Description)523
3928 y Fm(This)23 b(section)g(describ)r(es)f(the)h(system)g(that)g(ev)
-5 b(aluates)22 b(a)h(prop)r(osed)f(HOTPTP)g(language,)523
4028 y(based)36 b(on)f(a)h(BNF2)g(sp)r(eci\014cation)g(do)r(cumen)n(t)g
(pro)r(duced)g(man)n(ually)-7 b(.)35 b(The)h(system)g(in-)523
4127 y(cludes)e(b)r(oth)g(man)n(ual)f(and)h(automated)g(elemen)n(ts.)g
(This)f(is)h(not)g(a)g(system)f(to)h(pro)r(cess)523 4227
y(an)40 b(arbitrary)e(BNF2)i(do)r(cumen)n(t;)g(its)h(main)f(purp)r(ose)
f(is)h(to)g(supp)r(ort)g(TPTP-related)523 4327 y(dev)n(elopmen)n(t.)27
b(Figure)g(1)g(pro)n(vides)f(an)i(o)n(v)n(erview.)648
4426 y(The)k(primary)g(automated)g(part)g(of)h(the)g(system)g
(generates)e(an)h(executable)h(parser)523 4526 y(from)f(a)f(BNF2)h(sp)r
(eci\014cation)g(do)r(cumen)n(t)g(for)f(HOTPTP)-7 b(,)31
b(follo)n(wing)g(the)i(righ)n(t)e(branc)n(h)523 4625
y(of)d(the)h(diagram.)e(This)h(parser)f(is)h(extremely)g(simple,)h(to)f
(ensure)f(that)i(the)g(input)g(b)r(eing)523 4725 y(c)n(hec)n(k)n(ed)24
b(is)i(really)e(in)i(the)f(language)f(of)h(the)h(sp)r(eci\014cation)f
(do)r(cumen)n(t.)h(The)f(\014rst)h(step)f(to)523 4825
y(generate)e(a)h(parser)f(is)h(to)g(translate)g(the)g(\(ASCI)r(I)i
(text\))f(BNF2)f(sp)r(eci\014cation)g(do)r(cumen)n(t,)523
4924 y(sa)n(y)42 b Fd(hotptp-bnf2.txt)o Fm(,)36 b(in)n(to)41
b(a)h(pair)e(of)i(\014les,)f Fd(hotptp-1.lex0)c Fm(and)k
Fd(hotptp-1.y)p Fm(,)p eop
%%Page: 4 4
4 3 bop 523 448 a Fm(whic)n(h)34 b(are)e(input)i(\014les)g(for)f
Fe(lex)43 b Fm(\(or)33 b Fe(\015ex)10 b Fm(\))34 b(and)f
Fe(yac)l(c)39 b Fm(\(or)33 b Fe(bison)6 b Fm(\).)35 b(Unix/Lin)n(ux)f
(scripts)523 548 y(accomplish)28 b(this)g(translation,)f(in)n(v)n
(oking)g Fe(se)l(d)p Fm(,)i Fe(awk)p Fm(,)g Fe(gr)l(ep)p
Fm(,)g Fe(sort)p Fm(,)f(etc.)h(No)f(errors)e(are)h(de-)523
648 y(tected)g(during)f(this)i(step.)e(There)h(is)f(a)h(clear)e
(corresp)r(ondence)g(b)r(et)n(w)n(een)i(grammar)e(rules)523
747 y(in)35 b Fd(hotptp-bnf2.txt)28 b Fm(and)34 b Fd(hotptp-1.y)p
Fm(.)d(T)-7 b(ok)n(ens)33 b(ha)n(v)n(e)g(mnemonic)i(names)f(and)g(are)
523 847 y(easy)27 b(to)g(lo)r(cate)g(in)h Fd(hotptp-1.lex0)p
Fm(.)648 946 y(The)33 b(analysis)f(and)h(compilation)g(of)40
b Fd(hotptp-1.y)29 b Fm(b)n(y)k Fe(yac)l(c)39 b Fm(or)33
b Fe(bison)40 b Fm(is)34 b(a)f(critical)523 1046 y(step.)j(Grammar)f
(errors)f(and)h(am)n(biguities)h(are)f(often)h(lo)r(cated)g(here)f
(after)h(the)g(BNF2)523 1146 y(do)r(cumen)n(t)21 b(has)g(passed)f(h)n
(uman)h(insp)r(ection.)h(The)f(default)g(library)f(routines)g(are)g
(used)i(for)523 1245 y(all)k(pro)r(cedures)e(that)j(are)e(exp)r(ected)h
(to)g(b)r(e)g(supplied)g(b)n(y)g(the)g(programmer.)e(A)i(standard)523
1345 y(seman)n(tic)33 b(action)h(is)f(attac)n(hed)h(to)f(eac)n(h)g
(grammar)f(rule,)i(whic)n(h)g(builds)g(a)f(naiv)n(e)g(parse)523
1445 y(tree)f(for)f(eac)n(h)g(sen)n(tence,)h(whic)n(h)g(ma)n(y)f(b)r(e)
h(prin)n(ted)g(in)g(v)n(erb)r(ose)f(mo)r(de.)h(A)g(syn)n(tax)f(error)
523 1544 y(causes)g(\\syn)n(tax)g(error")e(on)j(the)g
Fd(stderr)e Fm(stream)h(and)h(a)g(nonzero)e(exit)j(co)r(de;)e(the)i
(exit)523 1644 y(co)r(de)27 b(is)h(zero)e(up)r(on)i(success.)648
1743 y(T)-7 b(esting)27 b(against)f(the)h(full)h(TPTP)f(Problem)f
(library)g(requires)g(sev)n(eral)f(min)n(utes.)j(All)523
1843 y(\014les)36 b(with)g(extension)f(\\)p Fd(.p)p Fm(")g(should)g(b)r
(e)h(accepted,)g(whereas)f(the)h(TSTP)f(library)g(con-)523
1943 y(tains)29 b(\014les)h(that)g(are)e(kno)n(wn)h(to)h(ha)n(v)n(e)e
(syn)n(tax)h(errors.)e(The)j(most)f(v)n(olatile)g(\014les)g(are)g(the)
523 2042 y(HOL)39 b(examples,)f(whic)n(h)h(use)f(the)i(higher)e(order)f
(extensions.)h(When)i(a)e(syn)n(tax)g(error)523 2142
y(or)f(unexp)r(ected)i(parse)f(tree)g(o)r(ccurs,)f(analysis)g(is)h
(needed)h(to)f(determine)h(if)f(fault)h(lies)523 2242
y(with)25 b(the)f(form)n(ula)f(or)h(the)g(language)e(sp)r
(eci\014cation.)i(Based)f(on)h(a)n(v)-5 b(ailable)23
b(examples,)h(the)523 2341 y(HOTPTP)f(language)g(has)h(stabilized)g
(after)g(ab)r(out)g(ten)g(iterations)g(of)g(the)h(left)g(branc)n(h)e
(of)523 2441 y(the)28 b(system)f(diagram.)523 2640 y
Ff(4)112 b(The)38 b(HOTPTP)e(Syn)m(tax)i(Prop)s(osal)523
2790 y Fm(The)24 b(complete)g(BNF2)f(do)r(cumen)n(t)h(for)f(the)h(prop)
r(osed)f(HOTPTP)g(syn)n(tax)g(is)g(a)n(v)-5 b(ailable)23
b(as)523 2881 y Fd(hotptp-bnf2.txt)h Fm(at)29 b(the)h(URL)h(giv)n(en)d
(at)i(the)g(end)g(of)g(Section)g(1.)f(The)h(follo)n(wing)f(ex-)523
2973 y(ample)d(illustrates)f(man)n(y)g(of)g(the)h(features)f(added)h
(to)f(express)g(higher)f(order)h(constructs.)523 3064
y(TPTP)33 b(follo)n(ws)h(the)g(Prolog)e(con)n(v)n(en)n(tion)h(that)i(v)
-5 b(ariables)33 b(b)r(egin)h(with)h(capital)f(letters,)523
3155 y(and)27 b(uses)h(\\?")f(for)g Fb(9)g Fm(and)h(\\!")f(for)g
Fb(8)p Fm(.)601 3297 y Fi(hof\(1,)41 b(definition,)758
3388 y(set_union)h(:=)d(lambda)i([A:)f($type]:)h(lambda)f([D:)g
(\(\(A->)h($o\)->)f($o\),)g(X:)g(A]:)1268 3479 y(?)g([S:)g(\(A->)g
($o\)]:)g(\()g(\(D)f(@)h(S\))g(&)f(\(S)h(@)f(X\))h(\))f(\).)648
3629 y Fm(The)30 b(new)h(op)r(erator)d(\\)p Fd(:=)p Fm(")h(p)r(ermits)i
(a)f(de\014nition)h(at)f(the)h(top)f(lev)n(el)g(of)h(a)f(\\form)n(ula")
523 3729 y(\(Hudak)f(uses)g(\\)p Fb(\021)p Fm(")e([Hud89]\).)i(Other)f
(new)h(op)r(erators)e(are:)h(\\)p Fd(lambda)p Fm(")e(for)i(lam)n(b)r
(da)h(ab-)523 3828 y(straction,)c(\\)p Fd(@)p Fm(")g(for)g
(application,)g(and)h(\\)p Fd(->)p Fm(")e(for)i(t)n(yp)r(e)g(mappings.)
f(The)h(colon)f(\\)p Fd(:)p Fm(")g(op)r(er-)523 3928
y(ator)d(has)g(sev)n(eral)f(new)i(meanings,)g(for)f(t)n(yping)h(and)f
(lam)n(b)r(da)h(expressions.)e(Also,)i(\\)p Fd(^)p Fm(")f(is)g(a)523
4028 y(synon)n(ym)g(for)g Fd(lambda)f Fm(and)h(\\)p Fd(>)p
Fm(")g(is)h(a)f(synon)n(ym)g(for)g(\\)p Fd(->)p Fm(".)g(W)-7
b(e)23 b(call)f(these)h(new)g(op)r(erators)523 4127 y(the)28
b(HOF)g(op)r(erators.)648 4227 y(Logical)40 b(op)r(erators)g(and)i(HOF)
g(op)r(erators)e(can)h(b)r(e)i(mixed)f(in)g Fc(\025)p
Fm(/)p Fd(@)g Fm(expressions,,)523 4327 y(sub)5 b(ject)34
b(to)g(using)g(paren)n(theses)f(as)g(needed.)h(F)-7 b(ollo)n(wing)33
b(the)i(general)d(principle)i(in)h(the)523 4426 y(TPTP)43
b(language,)f(an)h Fe(apply)j(expr)l(ession)p Fm(,)e(using)g(one)f(or)g
(more)f(binary)h(\\)p Fd(@)p Fm(")f(op)r(era-)523 4526
y(tors,)27 b(m)n(ust)h(b)r(e)g(paren)n(thesized;)f(ho)n(w)n(ev)n(er,)e
(the)j(unary)f(op)r(erator)f Fc(\025X)35 b Fm(and)27
b(its)h(argumen)n(t)523 4625 y(need)42 b(not)f(b)r(e.)h(Note)f(that)h
(\\)p Fd(@)p Fm(")e(is)h(left-asso)r(ciativ)n(e,)f(\\)p
Fd(->)p Fm(")g(is)h(righ)n(t-asso)r(ciativ)n(e,)d(and)523
4725 y(\\)p Fd(:)p Fm(")d(is)g(righ)n(t-asso)r(ciativ)n(e,)e(follo)n
(wing)i(usual)g(lam)n(b)r(da-calculus)g(con)n(v)n(en)n(tions.)f(Asso)r
(cia-)523 4825 y(tivities)25 b(of)f(existing)g(TPTP)f(op)r(erators)g
(carry)f(o)n(v)n(er.)h(The)i(lam)n(b)r(da)f(expression)e(sho)n(wn)i
(is:)523 4924 y Fc(\025A)p Fm(:)q Fc(\034)5 b(:)41 b(\025D)r
Fm(:)q(\(\()p Fc(A)p Fb(!)q Fc(o)p Fm(\))p Fb(!)p Fc(o)p
Fm(\))p Fc(:)h(\025X)7 b Fm(:)p Fc(A:)42 b Fb(9)p Fc(S)5
b Fm(:\()p Fc(A)p Fb(!)q Fc(o)p Fm(\))p Fc(:)42 b Fm(\(\()p
Fc(D)30 b Fm(@)d Fc(S)5 b Fm(\))32 b Fb(^)h Fm(\()p Fc(S)g
Fm(@)27 b Fc(X)7 b Fm(\)\).)p eop
%%Page: 5 5
5 4 bop 648 448 a Fm(V)-7 b(ariables)20 b(can)i(b)r(e)h(t)n(yp)r(ed)f
(at)g(the)g(p)r(oin)n(t)h(where)e(they)i(are)e(b)r(ound,)h(but)h(not)f
(elsewhere.)523 548 y(T)n(yping)28 b(is)g(not)g(required.)g(Builtin)h
(base)e(t)n(yp)r(es)i(are)e Fd($type)f Fm(\(the)j(set)g(of)f(t)n(yp)r
(es\),)h Fd($i)e Fm(\(the)523 648 y(set)38 b(of)h(individuals\),)f(and)
h Fd($o)e Fm(\(the)i(set)g(of)f(truth)h(v)-5 b(alues\).)38
b(User-de\014ned)g(base)g(t)n(yp)r(es)523 747 y(can)28
b(b)r(e)h(constan)n(ts)f(or)g(functional)g(terms.)h(Comp)r(ound)f(t)n
(yp)r(es)h(ma)n(y)f(b)r(e)h(built)g(from)g(base)523 847
y(t)n(yp)r(es)36 b(with)g(\\)p Fd(->)p Fm(".)e(Constan)n(ts)g(can)h(b)r
(e)h(t)n(yp)r(ed)g(where)f(they)h(o)r(ccur)f(in)h(a)f(form)n(ula;)g
(the)523 946 y(syn)n(tax)22 b(is)g Fd(\(c:)43 b(\(int->)e(int\)\))20
b Fm(or)i Fd(\(c:)43 b(A\))p Fm(,)21 b(etc.)i(Other)f(expressions)f
(cannot)i(b)r(e)g(t)n(yp)r(ed.)523 1046 y(F)-7 b(or)38
b(example,)g Fd(\(g\(U,)k(V\))g(:)i(\(int->)d(int->)g(int\)\))c
Fm(is)h(imp)r(ossible)h(\(but)g(the)g(apply)523 1146
y(expression)26 b Fd(\(g:)43 b(\(int->)e(int->)g(int\)\))h(@)h(U)g(@)g
(V)27 b Fm(is)h(accepted\).)648 1245 y(Op)r(erators)37
b(other)i(than)g(the)h(HOF)f(op)r(erators)e(can)i(b)r(e)h(treated)e(as)
h(constan)n(ts)f(b)n(y)523 1345 y(enclosing)i(them)h(in)g(paren)n
(theses,)e(as)i(in)f Fd(\(&\))g Fm(or)g Fd(\(~\))f Fm(or)h
Fd(\(=\))g Fm(etc.)h(The)f(expression)523 1445 y Fd(\()j(\(&\))g(@)g(X)
g(@)g(Y)g(\))28 b Fm(is)f(accepted.)648 1544 y(A)41 b(\014rst-order)d
(st)n(yle)i(functional)h(term)g(can)f(app)r(ear)g(where)g(a)g
Fc(\025)p Fm(/)p Fd(@)g Fm(expression)f(is)523 1644 y(needed,)24
b(but)h Fc(\025)p Fm(/)p Fd(@)p Fm(/)p Fb(!)e Fm(expressions)g(cannot)g
(app)r(ear)h(inside)g(a)g(functional)g(term.)g(That)g(is,)523
1743 y Fd(p\(\(S)42 b(@)h(X\)\))27 b Fm(is)g(imp)r(ossible,)h(but)g
Fd(\(S)43 b(@)g(p\(X\)\))25 b Fm(is)j(accepted.)523 1927
y Ff(5)112 b(Related)37 b(W)-9 b(ork)37 b(and)h(Ac)m(kno)m(wledgmen)m
(ts)523 2076 y Fm(Other)18 b(v)-5 b(arian)n(ts)17 b(of)i(BNF)g(ha)n(v)n
(e)e(b)r(een)i(prop)r(osed)f(b)r(efore)g(BNF2.)g(Extended)h(BNF)g
(\(EBNF\))523 2176 y(w)n(as)36 b(designed)g(b)n(y)g(a)h(standards)e
(committee)i(to)g(ha)n(v)n(e)e(great)h(generalit)n(y)f(but)i(is)g
(quite)523 2276 y(complicated,)24 b(with)i(ab)r(out)e(a)h(dozen)f
(meta-sym)n(b)r(ols,)f(and)i(do)r(es)f(not)h(distinguish)g(tok)n(ens)
523 2375 y(from)32 b(grammar)e(sym)n(b)r(ols.)i(Lab)r(eled)g(BNF)g
(\(LBNF\))h(is)f(designed)g(to)g(generate)f(parsers)523
2475 y(automatically)h([FR05],)h(and)h(distinguishes)f(tok)n(ens)g
(from)g(grammar)e(sym)n(b)r(ols,)i(but)h(is)523 2574
y(ev)n(en)27 b(more)g(complicated)g(than)h(EBNF.)648
2674 y(HOTPTP)18 b(requiremen)n(ts)g(w)n(ere)g(culled)i(from)f(Hudak's)
g(exp)r(osition)g(of)g(lam)n(b)r(da)g(calcu-)523 2774
y(lus)24 b([Hud89],)g(and)g(descriptions)f(of)h Fe(Co)l(q)32
b Fm([F)-7 b(eRL],)24 b Fe(LF)36 b Fm([HHP93)o(],)24
b(and)g Fe(ELF)36 b Fm([Pfe94)n(].)25 b(W)-7 b(e)523
2873 y(thank)25 b(Chad)g(Bro)n(wn)f(and)h(Chris)g(Benzm)r(\177)-44
b(uller)24 b(for)h(con)n(tributing)g(examples)f(of)h(form)n(ulas)523
2973 y(that)j(should)f(b)r(e)h(expressible)f(in)h(HOTPTP)e(syn)n(tax,)h
(based)g(on)g(their)h(w)n(ork)e([BB05)o(].)523 3156 y
Ff(References)523 3289 y Fj([BB05])81 b(C.)31 b(Benzm)r(\177)-41
b(uller)30 b(and)f(C.)i(Bro)n(wn.)47 b(A)29 b(Structured)g(Set)g(of)h
(Higher-Order)f(Problems.)830 3381 y(In)c Fg(Pr)l(o)l(c.)j(18th)h(The)l
(or)l(em)f(Pr)l(oving)g(in)g(Higher)g(Or)l(der)g(L)l(o)l(gics)p
Fj(,)f(pages)g(66{81,)g(2005.)523 3464 y([F)-6 b(eRL])82
b(D.)26 b(F)-6 b(elt)n(y)25 b Fg(et)j(al.)33 b Fj(The)26
b(Co)r(q)g(Pro)r(of)i(Assistan)n(t.)34 b(h)n
(ttp://pauillac.inria.fr/co)r(q,)c(URL.)523 3547 y([FR05])82
b(M.)29 b(F)-6 b(orsb)r(erg)28 b(and)g(A.)g(Ran)n(ta.)41
b(The)28 b(Lab)r(elled)h(BNF)f(Grammar)f(F)-6 b(ormalism.)40
b(T)-6 b(ec)n(h-)830 3638 y(nical)27 b(rep)r(ort,)f(Chalmers,)g(Gothen)
n(burg,)g(Sw)n(eden,)f(2005.)830 3730 y(h)n(ttp://www.cs.c)n
(halmers.se/)p Fa(\030)p Fj(markus/BNF)n(C.)523 3813
y([HHP93])42 b(R.)32 b(Harp)r(er,)h(F.)f(Honsell,)h(and)f(G.)h
(Plotkin.)53 b(A)32 b(F)-6 b(ramew)n(ork)32 b(for)h(De\014ning)e
(Logics.)830 3904 y Fg(Journal)d(of)g(the)g(A)n(CM)p
Fj(,)e(40\(1\):143{184,)k(1993.)523 3987 y([Hud89])45
b(P)-6 b(.)31 b(Hudak.)50 b(Conception,)32 b(Ev)n(olution,)g(and)f
(Application)h(of)g(F)-6 b(unctional)31 b(Program-)830
4079 y(ming)25 b(Languages.)36 b Fg(A)n(CM)27 b(Computing)h(Surveys)p
Fj(,)g(21:359{411,)i(1989.)523 4162 y([Ne60])97 b(P)-6
b(.)22 b(Naur)f Fg(et)j(al.)j Fj(Rep)r(ort)21 b(on)h(Algorithmic)f
(Language)i(ALGOL)e(60.)28 b Fg(Communic)l(ations)830
4253 y(of)f(the)i(A)n(CM)p Fj(,)c(3:299{314,)30 b(1960.)523
4336 y([Pfe94])80 b(F.)30 b(Pfenning.)45 b(ELF:)30 b(A)f(meta-language)
g(for)h(deductiv)n(e)e(systems)h(\(system)f(descrip-)830
4427 y(tion\).)35 b(In)25 b Fg(CADE)p Fj(,)g(1994.)523
4511 y([SS98])103 b(G.)34 b(Sutcli\013e)f(and)h(C.B.)g(Suttner.)57
b(The)34 b(TPTP)g(Problem)g(Library:)f(CNF)h(Release)830
4602 y(v1.2.1.)i Fg(Journal)28 b(of)f(A)n(utomate)l(d)j(R)l(e)l
(asoning)p Fj(,)d(21\(2\):177{203,)j(1998.)523 4685 y([SZS04])56
b(G.)21 b(Sutcli\013e,)f(J.)h(Zimmer,)e(and)h(S.)g(Sc)n(h)n(ulz.)k
(TSTP)d(Data-Exc)n(hange)f(F)-6 b(ormats)20 b(for)h(Au-)830
4776 y(tomated)27 b(Theorem)g(Pro)n(ving)g(T)-6 b(o)r(ols.)41
b(In)26 b Fg(Distribute)l(d)31 b(Constr)l(aint)f(Pr)l(oblem)g(Solving)
830 4868 y(and)e(R)l(e)l(asoning)h(in)e(Multi-A)l(gent)i(Systems)p
Fj(,)e(pages)g(201{215.)h(IOS)d(Press,)i(2004.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
